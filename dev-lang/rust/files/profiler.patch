From 6d1c8c84e48eddb5e2ae4a1eb1b063511d136c1f Mon Sep 17 00:00:00 2001
From: 12101111 <w12101111@gmail.com>
Date: Wed, 18 Nov 2020 10:33:07 +0800
Subject: [PATCH 1/2] fix handling the default config for profiler and
 sanitizers

---
 src/bootstrap/config.rs | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/bootstrap/config.rs b/src/bootstrap/config.rs
index c0753d88504..3b9c18b22d8 100644
--- a/src/bootstrap/config.rs
+++ b/src/bootstrap/config.rs
@@ -279,8 +279,8 @@ pub struct Target {
     pub ranlib: Option<PathBuf>,
     pub linker: Option<PathBuf>,
     pub ndk: Option<PathBuf>,
-    pub sanitizers: bool,
-    pub profiler: bool,
+    pub sanitizers: Option<bool>,
+    pub profiler: Option<bool>,
     pub crt_static: Option<bool>,
     pub musl_root: Option<PathBuf>,
     pub musl_libdir: Option<PathBuf>,
@@ -894,8 +894,8 @@ pub fn parse(args: &[String]) -> Config {
                 target.musl_libdir = cfg.musl_libdir.map(PathBuf::from);
                 target.wasi_root = cfg.wasi_root.map(PathBuf::from);
                 target.qemu_rootfs = cfg.qemu_rootfs.map(PathBuf::from);
-                target.sanitizers = cfg.sanitizers.unwrap_or(build.sanitizers.unwrap_or_default());
-                target.profiler = cfg.profiler.unwrap_or(build.profiler.unwrap_or_default());
+                target.sanitizers = cfg.sanitizers;
+                target.profiler = cfg.profiler;
 
                 config.target_config.insert(TargetSelection::from_user(&triple), target);
             }
@@ -1006,19 +1006,19 @@ pub fn very_verbose(&self) -> bool {
     }
 
     pub fn sanitizers_enabled(&self, target: TargetSelection) -> bool {
-        self.target_config.get(&target).map(|t| t.sanitizers).unwrap_or(self.sanitizers)
+        self.target_config.get(&target).map(|t| t.sanitizers).flatten().unwrap_or(self.sanitizers)
     }
 
     pub fn any_sanitizers_enabled(&self) -> bool {
-        self.target_config.values().any(|t| t.sanitizers) || self.sanitizers
+        self.target_config.values().any(|t| t.sanitizers == Some(true)) || self.sanitizers
     }
 
     pub fn profiler_enabled(&self, target: TargetSelection) -> bool {
-        self.target_config.get(&target).map(|t| t.profiler).unwrap_or(self.profiler)
+        self.target_config.get(&target).map(|t| t.profiler).flatten().unwrap_or(self.profiler)
     }
 
     pub fn any_profiler_enabled(&self) -> bool {
-        self.target_config.values().any(|t| t.profiler) || self.profiler
+        self.target_config.values().any(|t| t.profiler == Some(true)) || self.profiler
     }
 
     pub fn llvm_enabled(&self) -> bool {
-- 
2.30.0

