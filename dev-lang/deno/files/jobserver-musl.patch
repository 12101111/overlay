diff --git a/src/unix.rs b/src/unix.rs
index 9d26edc..3dde851 100644
--- a/src/unix.rs
+++ b/src/unix.rs
@@ -287,7 +287,7 @@ impl Client {
 
         // On Linux, we can use preadv2 to do non-blocking read,
         // even if `O_NONBLOCK` is not set.
-        #[cfg(target_os = "linux")]
+        #[cfg(all(target_os = "linux", target_env = "gnu"))]
         {
             let read = self.read().as_raw_fd();
             loop {
@@ -577,7 +577,7 @@ extern "C" fn sigusr1_handler(
     // nothing to do
 }
 
-#[cfg(target_os = "linux")]
+#[cfg(all(target_os = "linux", target_env = "gnu"))]
 fn cvt_ssize(t: libc::ssize_t) -> io::Result<libc::ssize_t> {
     if t == -1 {
         Err(io::Error::last_os_error())
@@ -586,7 +586,7 @@ fn cvt_ssize(t: libc::ssize_t) -> io::Result<libc::ssize_t> {
     }
 }
 
-#[cfg(target_os = "linux")]
+#[cfg(all(target_os = "linux", target_env = "gnu"))]
 fn non_blocking_read(fd: c_int, buf: &[u8]) -> io::Result<usize> {
     static IS_NONBLOCKING_READ_UNSUPPORTED: AtomicBool = AtomicBool::new(false);
 
