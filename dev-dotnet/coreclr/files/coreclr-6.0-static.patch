diff --git a/src/coreclr/debug/daccess/CMakeLists.txt b/src/coreclr/debug/daccess/CMakeLists.txt
index 414afed..cd54008 100644
--- a/src/coreclr/debug/daccess/CMakeLists.txt
+++ b/src/coreclr/debug/daccess/CMakeLists.txt
@@ -36,7 +36,7 @@ include_directories(${ARCH_SOURCES_DIR})
 
 convert_to_absolute_path(DACCESS_SOURCES ${DACCESS_SOURCES})
 
-add_library_clr(daccess ${DACCESS_SOURCES})
+add_library_clr(daccess STATIC ${DACCESS_SOURCES})
 set_target_properties(daccess PROPERTIES DAC_COMPONENT TRUE)
 target_precompile_headers(daccess PRIVATE [["stdafx.h"]])
 
diff --git a/src/coreclr/debug/ee/dac/CMakeLists.txt b/src/coreclr/debug/ee/dac/CMakeLists.txt
index 784ed9b..a84e6b0 100644
--- a/src/coreclr/debug/ee/dac/CMakeLists.txt
+++ b/src/coreclr/debug/ee/dac/CMakeLists.txt
@@ -3,7 +3,7 @@ if (CLR_CMAKE_TARGET_WIN32)
   list(APPEND CORDBEE_SOURCES_DAC ${CORDBEE_HEADERS_DAC})
 endif (CLR_CMAKE_TARGET_WIN32)
 
-add_library_clr(cordbee_dac ${CORDBEE_SOURCES_DAC})
+add_library_clr(cordbee_dac STATIC ${CORDBEE_SOURCES_DAC})
 set_target_properties(cordbee_dac PROPERTIES DAC_COMPONENT TRUE)
 target_precompile_headers(cordbee_dac PRIVATE [["stdafx.h"]])
 add_dependencies(cordbee_dac eventing_headers)
diff --git a/src/coreclr/jit/crossgen/CMakeLists.txt b/src/coreclr/jit/crossgen/CMakeLists.txt
index 30d35e8..e74b009 100644
--- a/src/coreclr/jit/crossgen/CMakeLists.txt
+++ b/src/coreclr/jit/crossgen/CMakeLists.txt
@@ -1,4 +1,4 @@
-add_library_clr(clrjit_crossgen ${SOURCES} ${JIT_ARCH_SOURCES})
+add_library_clr(clrjit_crossgen STATIC ${SOURCES} ${JIT_ARCH_SOURCES})
 if(FEATURE_MERGE_JIT_AND_ENGINE)
   target_link_libraries(clrjit_crossgen ${JIT_LINK_LIBRARIES} ${JIT_ARCH_LINK_LIBRARIES})
 endif(FEATURE_MERGE_JIT_AND_ENGINE)
diff --git a/src/coreclr/md/compiler/CMakeLists.txt b/src/coreclr/md/compiler/CMakeLists.txt
index a2d3a57..511e911 100644
--- a/src/coreclr/md/compiler/CMakeLists.txt
+++ b/src/coreclr/md/compiler/CMakeLists.txt
@@ -62,7 +62,7 @@ if (CLR_CMAKE_TARGET_WIN32)
     list(APPEND MDCOMPILER_WKS_SOURCES ${MDCOMPILER_WKS_HEADERS})
 endif()
 
-add_library_clr(mdcompiler_dac ${MDCOMPILER_SOURCES})
+add_library_clr(mdcompiler_dac STATIC ${MDCOMPILER_SOURCES})
 set_target_properties(mdcompiler_dac PROPERTIES DAC_COMPONENT TRUE)
 target_precompile_headers(mdcompiler_dac PRIVATE stdafx.h)
 
@@ -72,14 +72,14 @@ target_precompile_headers(mdcompiler_wks_obj PRIVATE stdafx.h)
 add_library(mdcompiler_wks INTERFACE)
 target_sources(mdcompiler_wks INTERFACE $<TARGET_OBJECTS:mdcompiler_wks_obj>)
 
-add_library_clr(mdcompiler-dbi ${MDCOMPILER_SOURCES})
+add_library_clr(mdcompiler-dbi STATIC ${MDCOMPILER_SOURCES})
 set_target_properties(mdcompiler-dbi PROPERTIES DBI_COMPONENT TRUE)
 target_precompile_headers(mdcompiler-dbi PRIVATE stdafx.h)
 
-add_library_clr(mdcompiler_crossgen ${MDCOMPILER_SOURCES})
+add_library_clr(mdcompiler_crossgen STATIC ${MDCOMPILER_SOURCES})
 set_target_properties(mdcompiler_crossgen PROPERTIES CROSSGEN_COMPONENT TRUE)
 target_precompile_headers(mdcompiler_crossgen PRIVATE stdafx.h)
 
-add_library_clr(mdcompiler_ppdb ${MDCOMPILER_SOURCES})
+add_library_clr(mdcompiler_ppdb STATIC ${MDCOMPILER_SOURCES})
 target_compile_definitions(mdcompiler_ppdb PRIVATE FEATURE_METADATA_EMIT_ALL FEATURE_METADATA_EMIT_PORTABLE_PDB)
 target_precompile_headers(mdcompiler_ppdb PRIVATE stdafx.h)
diff --git a/src/coreclr/md/enc/CMakeLists.txt b/src/coreclr/md/enc/CMakeLists.txt
index d4abb37..4424a58 100644
--- a/src/coreclr/md/enc/CMakeLists.txt
+++ b/src/coreclr/md/enc/CMakeLists.txt
@@ -48,7 +48,7 @@ endif(CLR_CMAKE_TARGET_WIN32)
 convert_to_absolute_path(MDRUNTIMERW_HEADERS ${MDRUNTIMERW_HEADERS})
 convert_to_absolute_path(MDRUNTIMERW_SOURCES ${MDRUNTIMERW_SOURCES})
 
-add_library_clr(mdruntimerw_dac ${MDRUNTIMERW_SOURCES})
+add_library_clr(mdruntimerw_dac STATIC ${MDRUNTIMERW_SOURCES})
 set_target_properties(mdruntimerw_dac PROPERTIES DAC_COMPONENT TRUE)
 target_precompile_headers(mdruntimerw_dac PRIVATE stdafx.h)
 
@@ -58,10 +58,10 @@ target_precompile_headers(mdruntimerw_wks_obj PRIVATE stdafx.h)
 add_library(mdruntimerw_wks INTERFACE)
 target_sources(mdruntimerw_wks INTERFACE $<TARGET_OBJECTS:mdruntimerw_wks_obj>)
 
-add_library_clr(mdruntimerw-dbi ${MDRUNTIMERW_SOURCES})
+add_library_clr(mdruntimerw-dbi STATIC ${MDRUNTIMERW_SOURCES})
 set_target_properties(mdruntimerw-dbi PROPERTIES DBI_COMPONENT TRUE)
 target_precompile_headers(mdruntimerw-dbi PRIVATE stdafx.h)
 
-add_library_clr(mdruntimerw_ppdb ${MDRUNTIMERW_SOURCES})
+add_library_clr(mdruntimerw_ppdb STATIC ${MDRUNTIMERW_SOURCES})
 target_compile_definitions(mdruntimerw_ppdb PRIVATE FEATURE_METADATA_EMIT_ALL FEATURE_METADATA_EMIT_PORTABLE_PDB)
 target_precompile_headers(mdruntimerw_ppdb PRIVATE stdafx.h)
diff --git a/src/coreclr/md/hotdata/CMakeLists.txt b/src/coreclr/md/hotdata/CMakeLists.txt
index 7f8ba75..d04ffcd 100644
--- a/src/coreclr/md/hotdata/CMakeLists.txt
+++ b/src/coreclr/md/hotdata/CMakeLists.txt
@@ -29,7 +29,7 @@ if (CLR_CMAKE_TARGET_WIN32)
     list(APPEND MDHOTDATA_SOURCES ${MDHOTDATA_HEADERS})
 endif (CLR_CMAKE_TARGET_WIN32)
 
-add_library_clr(mdhotdata_dac ${MDHOTDATA_SOURCES})
+add_library_clr(mdhotdata_dac STATIC ${MDHOTDATA_SOURCES})
 set_target_properties(mdhotdata_dac PROPERTIES DAC_COMPONENT TRUE)
 target_precompile_headers(mdhotdata_dac PRIVATE external.h)
 
@@ -38,7 +38,7 @@ target_precompile_headers(mdhotdata_full_obj PRIVATE external.h)
 add_library(mdhotdata_full INTERFACE)
 target_sources(mdhotdata_full INTERFACE $<TARGET_OBJECTS:mdhotdata_full_obj>)
 
-add_library_clr(mdhotdata_crossgen ${MDHOTDATA_SOURCES})
+add_library_clr(mdhotdata_crossgen STATIC ${MDHOTDATA_SOURCES})
 set_target_properties(mdhotdata_crossgen PROPERTIES CROSSGEN_COMPONENT TRUE)
 target_precompile_headers(mdhotdata_crossgen PRIVATE external.h)
 
@@ -47,6 +47,6 @@ if(CLR_CMAKE_HOST_WIN32)
   target_precompile_headers(mdhotdata-staticcrt PRIVATE external.h)
 endif(CLR_CMAKE_HOST_WIN32)
 
-add_library_clr(mdhotdata_ppdb ${MDHOTDATA_SOURCES})
+add_library_clr(mdhotdata_ppdb STATIC ${MDHOTDATA_SOURCES})
 target_compile_definitions(mdhotdata_ppdb PRIVATE FEATURE_METADATA_EMIT_PORTABLE_PDB)
 target_precompile_headers(mdhotdata_ppdb PRIVATE external.h)
diff --git a/src/coreclr/md/runtime/CMakeLists.txt b/src/coreclr/md/runtime/CMakeLists.txt
index 3e1fc8e..081d5f9 100644
--- a/src/coreclr/md/runtime/CMakeLists.txt
+++ b/src/coreclr/md/runtime/CMakeLists.txt
@@ -45,7 +45,7 @@ if (CLR_CMAKE_TARGET_WIN32)
     list(APPEND MDRUNTIME_SOURCES ${MDRUNTIME_HEADERS})
 endif (CLR_CMAKE_TARGET_WIN32)
 
-add_library_clr(mdruntime_dac ${MDRUNTIME_SOURCES})
+add_library_clr(mdruntime_dac STATIC ${MDRUNTIME_SOURCES})
 set_target_properties(mdruntime_dac PROPERTIES DAC_COMPONENT TRUE)
 target_precompile_headers(mdruntime_dac PRIVATE stdafx.h)
 
@@ -55,10 +55,10 @@ target_precompile_headers(mdruntime_wks_obj PRIVATE stdafx.h)
 add_library(mdruntime_wks INTERFACE)
 target_sources(mdruntime_wks INTERFACE $<TARGET_OBJECTS:mdruntime_wks_obj>)
 
-add_library_clr(mdruntime-dbi ${MDRUNTIME_SOURCES})
+add_library_clr(mdruntime-dbi STATIC ${MDRUNTIME_SOURCES})
 set_target_properties(mdruntime-dbi PROPERTIES DBI_COMPONENT TRUE)
 target_precompile_headers(mdruntime-dbi PRIVATE stdafx.h)
 
-add_library_clr(mdruntime_ppdb ${MDRUNTIME_SOURCES})
+add_library_clr(mdruntime_ppdb STATIC ${MDRUNTIME_SOURCES})
 target_compile_definitions(mdruntime_ppdb PRIVATE FEATURE_METADATA_EMIT_ALL FEATURE_METADATA_EMIT_PORTABLE_PDB)
 target_precompile_headers(mdruntime_ppdb PRIVATE stdafx.h)
diff --git a/src/coreclr/md/staticmd/CMakeLists.txt b/src/coreclr/md/staticmd/CMakeLists.txt
index 99612f8..aaccdfe 100644
--- a/src/coreclr/md/staticmd/CMakeLists.txt
+++ b/src/coreclr/md/staticmd/CMakeLists.txt
@@ -10,7 +10,7 @@ add_definitions(-DFEATURE_METADATA_EMIT_ALL)
 add_definitions(-DFEATURE_METADATA_EMIT)
 add_definitions(-DFEATURE_METADATA_INTERNAL_APIS)
 
-add_library_clr(mdstaticapi ${STATICMD_SOURCES})
+add_library_clr(mdstaticapi STATIC ${STATICMD_SOURCES})
 
-add_library_clr(mdstaticapi_ppdb ${STATICMD_SOURCES})
+add_library_clr(mdstaticapi_ppdb STATIC ${STATICMD_SOURCES})
 target_compile_definitions(mdstaticapi_ppdb PRIVATE FEATURE_METADATA_EMIT_PORTABLE_PDB)
\ No newline at end of file
diff --git a/src/coreclr/unwinder/CMakeLists.txt b/src/coreclr/unwinder/CMakeLists.txt
index e00e322..7d0b6b3 100644
--- a/src/coreclr/unwinder/CMakeLists.txt
+++ b/src/coreclr/unwinder/CMakeLists.txt
@@ -26,7 +26,7 @@ if(CLR_CMAKE_HOST_UNIX)
     target_sources(unwinder_wks INTERFACE $<TARGET_OBJECTS:unwinder_wks_obj>)
 endif(CLR_CMAKE_HOST_UNIX)
 
-add_library_clr(unwinder_dac ${UNWINDER_SOURCES})
+add_library_clr(unwinder_dac STATIC ${UNWINDER_SOURCES})
 add_dependencies(unwinder_dac eventing_headers)
 set_target_properties(unwinder_dac PROPERTIES DAC_COMPONENT TRUE)
 target_compile_definitions(unwinder_dac PRIVATE FEATURE_NO_HOST)
diff --git a/src/coreclr/vm/CMakeLists.txt b/src/coreclr/vm/CMakeLists.txt
index 5cb683b..4265436 100644
--- a/src/coreclr/vm/CMakeLists.txt
+++ b/src/coreclr/vm/CMakeLists.txt
@@ -958,7 +958,7 @@ convert_to_absolute_path(VM_SOURCES_WKS_ARCH_ASM ${VM_SOURCES_WKS_ARCH_ASM})
 convert_to_absolute_path(VM_SOURCES_DAC ${VM_SOURCES_DAC})
 convert_to_absolute_path(VM_SOURCES_WKS_SPECIAL ${VM_SOURCES_WKS_SPECIAL})
 
-add_library_clr(cee_dac ${VM_SOURCES_DAC})
+add_library_clr(cee_dac STATIC ${VM_SOURCES_DAC})
 add_dependencies(cee_dac eventing_headers)
 set_target_properties(cee_dac PROPERTIES DAC_COMPONENT TRUE)
 target_precompile_headers(cee_dac PRIVATE [["common.h"]])
