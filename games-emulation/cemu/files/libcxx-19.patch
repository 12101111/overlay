diff --git a/src/util/helpers/StringHelpers.h b/src/util/helpers/StringHelpers.h
index 5414180..5819374 100644
--- a/src/util/helpers/StringHelpers.h
+++ b/src/util/helpers/StringHelpers.h
@@ -2,6 +2,42 @@
 #include "boost/nowide/convert.hpp"
 #include <charconv>
 
+template<class CharT, class BaseT>
+class traits_cloner
+{
+public:
+    using char_type = CharT;
+
+    using base_type = BaseT;
+    using base_traits = std::char_traits<base_type>;
+
+    static std::size_t length(char_type const* s) {
+        return base_traits::length(reinterpret_cast<base_type const*>(s));
+    }
+    static int compare(char_type const* s1, char_type const* s2, std::size_t count) {
+        return base_traits::compare(reinterpret_cast<base_type const*>(s1), reinterpret_cast<base_type const*>(s2), count);
+    }
+    static char_type* copy(char_type* dest, char_type const* src, std::size_t count) {
+        return reinterpret_cast<char_type*>(base_traits::copy(reinterpret_cast<base_type*>(dest), reinterpret_cast<base_type const*>(src), count));
+    }
+    static void assign(char_type& c1, char_type const& c2) noexcept {
+        c1 = c2;
+    }
+    static char_type* assign(char_type* s, size_t n, char_type a) {
+				return reinterpret_cast<char_type *>(base_traits::assign(reinterpret_cast<base_type*>(s), n, static_cast<base_type>(a)));
+    }
+    static char_type const* find(char_type const* ptr, std::size_t count, char_type const& ch) {
+				return reinterpret_cast<char_type const*>(base_traits::find(reinterpret_cast<base_type const*>(ptr), count, reinterpret_cast<base_type const&>(ch)));
+    }
+    static char_type* move(char_type* s1, const char_type* s2, std::size_t count) {
+				return reinterpret_cast<char_type *>(base_traits::move(reinterpret_cast<base_type*>(s1), reinterpret_cast<base_type const*>(s2), count));
+    }
+};
+
+template<>
+class std::char_traits<betype<unsigned short>> : public traits_cloner<betype<unsigned short>, char16_t>
+{};
+
 // todo - move the Cafe/PPC specific parts to CafeString.h eventually
 namespace StringHelpers
 {
