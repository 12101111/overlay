diff --git a/goldendict.pro b/goldendict.pro
index 9ed90bd7..2346c793 100644
--- a/goldendict.pro
+++ b/goldendict.pro
@@ -191,10 +191,6 @@ win32 {
 }
 
 unix:!mac {
-    DEFINES += HAVE_X11
-
-    lessThan(QT_MAJOR_VERSION, 6):     QT += x11extras
-
     CONFIG += link_pkgconfig
 
     PKGCONFIG += vorbisfile \
@@ -207,9 +203,6 @@ unix:!mac {
             libavcodec \
             libswresample \
     }
-    !arm {
-        LIBS += -lX11 -lXtst
-    }
 
     # Install prefix: first try to use qmake's PREFIX variable,
     # then $PREFIX from system environment, and if both fails,
diff --git a/src/hotkeywrapper.cc b/src/hotkeywrapper.cc
index fd35fb10..4cc57912 100644
--- a/src/hotkeywrapper.cc
+++ b/src/hotkeywrapper.cc
@@ -473,11 +473,14 @@ bool QHotkeyApplication::nativeEventFilter( const QByteArray & /*eventType*/, vo
 #else
 
 //////////////////////////////////////////////////////////////////////////
-
+#ifdef HAVE_X11
 #include <X11/keysym.h>
+#endif
+
 
 void HotkeyWrapper::init()
 {
+#ifdef HAVE_X11
   keyToUngrab = grabbedKeys.end();
 
 #if QT_VERSION < 0x060000
@@ -544,18 +547,21 @@ void HotkeyWrapper::init()
 
   connect( this, &HotkeyWrapper::keyRecorded, this, &HotkeyWrapper::checkState, Qt::QueuedConnection );
 
+#endif
   start();
 }
 
 void HotkeyWrapper::run() // Runs in a separate thread
 {
+#ifdef HAVE_X11
   if ( !XRecordEnableContext( dataDisplay, recordContext,
                               recordEventCallback,
                               (XPointer) this ) )
     GD_DPRINTF( "Failed to enable record context\n" );
+#endif
 }
 
-
+#ifdef HAVE_X11
 void HotkeyWrapper::recordEventCallback( XPointer ptr, XRecordInterceptData * data )
 {
   ((HotkeyWrapper * )ptr)->handleRecordEvent( data );
@@ -621,6 +627,7 @@ void HotkeyWrapper::handleRecordEvent( XRecordInterceptData * data )
 
   XRecordFreeData( data );
 }
+#endif
 
 bool HotkeyWrapper::setGlobalKey( QKeySequence const & seq, int handle )
 {
@@ -631,6 +638,7 @@ bool HotkeyWrapper::setGlobalKey( QKeySequence const & seq, int handle )
 bool HotkeyWrapper::setGlobalKey( int key, int key2,
                                   Qt::KeyboardModifiers modifier, int handle )
 {
+#ifdef HAVE_X11
   if ( !key )
     return false; // We don't monitor empty combinations
 
@@ -653,8 +661,12 @@ bool HotkeyWrapper::setGlobalKey( int key, int key2,
     grabKey( vk, mod ); // Make sure it doesn't get caught by other apps
 
   return true;
+#else
+  return false;
+#endif
 }
 
+#ifdef HAVE_X11
 bool HotkeyWrapper::isCopyToClipboardKey( quint32 keyCode, quint32 modifiers ) const
 {
   return modifiers == ControlMask &&
@@ -779,9 +791,11 @@ void HotkeyWrapper::ungrabKey( GrabbedKeys::iterator i )
     gdWarning( "Cannot ungrab the hotkey" );
   }
 }
+#endif
 
 quint32 HotkeyWrapper::nativeKey(int key)
 {
+#ifdef HAVE_X11
   QString keySymName;
 
   switch( key )
@@ -801,10 +815,14 @@ quint32 HotkeyWrapper::nativeKey(int key)
 #endif
   Display * display = displayID;
   return XKeysymToKeycode( display, XStringToKeysym( keySymName.toLatin1().data() ) );
+else
+  return 0;
+#endif
 }
 
 void HotkeyWrapper::unregister()
 {
+#ifdef HAVE_X11
 #if QT_VERSION < 0x060000
   Display *displayID = QX11Info::display();
 #else
@@ -824,7 +842,7 @@ void HotkeyWrapper::unregister()
 
   while( grabbedKeys.size() )
     ungrabKey( grabbedKeys.begin() );
-
+#endif
   (static_cast<QHotkeyApplication*>(qApp))->unregisterWrapper(this);
 }
 
diff --git a/src/hotkeywrapper.hh b/src/hotkeywrapper.hh
index 77564473..38cf4418 100644
--- a/src/hotkeywrapper.hh
+++ b/src/hotkeywrapper.hh
@@ -120,13 +120,16 @@ private:
 
 #else
 
+#ifdef HAVE_X11
   static void recordEventCallback( XPointer, XRecordInterceptData * );
 
   /// Called by recordEventCallback()
   void handleRecordEvent( XRecordInterceptData * );
+#endif
 
   void run(); // QThread
 
+#ifdef HAVE_X11
   // We do one-time init of those, translating keysyms to keycodes
   KeyCode lShiftCode, rShiftCode, lCtrlCode, rCtrlCode, lAltCode, rAltCode,
           cCode, insertCode, kpInsertCode, lMetaCode, rMetaCode;
@@ -157,6 +160,7 @@ private:
   /// Ungrabs the given key. erasing it from grabbedKeys. The key's provided
   /// as an interator inside the grabbedKeys set.
   void ungrabKey( GrabbedKeys::iterator );
+#endif
 
 signals:
 
diff --git a/src/keyboardstate.cc b/src/keyboardstate.cc
index 2d336ed0..c481bc08 100644
--- a/src/keyboardstate.cc
+++ b/src/keyboardstate.cc
@@ -43,8 +43,7 @@ bool KeyboardState::checkModifiersPressed( int mask )
     ( mask & Ctrl && !( keys & ( 1 << cmdKeyBit ) ) ) ||
     ( mask & Shift && !( keys & ( 1 << shiftKeyBit ) ) ) ||
     ( mask & Win && !( keys & ( 1 << controlKeyBit ) ) ) );
-  #else
-
+  #elif defined(HAVE_X11)
 #if QT_VERSION < 0x060000
   Display *displayID = QX11Info::display();
 #else
@@ -61,6 +60,8 @@ bool KeyboardState::checkModifiersPressed( int mask )
     ( mask & Ctrl && !( state.base_mods & ControlMask ) ) ||
     ( mask & Shift && !( state.base_mods & ShiftMask ) ) ||
     ( mask & Win && !( state.base_mods & Mod4Mask ) ) );
+  #else
+    return false;
   #endif
 }
 
diff --git a/src/main.cc b/src/main.cc
index 0419e7dc..fdaf347c 100644
--- a/src/main.cc
+++ b/src/main.cc
@@ -225,7 +225,7 @@ void processCommandLine( QCoreApplication * app, GDOptions * result)
 
 int main( int argc, char ** argv )
 {
-#ifdef Q_OS_UNIX
+#if defined(Q_OS_UNIX) && defined(HAVE_X11)
   // GoldenDict use lots of X11 functions and it currently cannot work
   // natively on Wayland. This workaround will force GoldenDict to use
   // XWayland.
diff --git a/src/ui/scanpopup.cc b/src/ui/scanpopup.cc
index 253cfe4d..c43ae978 100644
--- a/src/ui/scanpopup.cc
+++ b/src/ui/scanpopup.cc
@@ -39,7 +39,7 @@ static const Qt::WindowFlags pinnedWindowFlags =
 /// Qt::Window allows to use the scan popup and the main window independently.
 Qt::Window
 #else
-Qt::Dialog
+Qt::Dialog | Qt::FramelessWindowHint | Qt::WindowStaysOnTopHint
 #endif
 ;
 
@@ -592,7 +592,7 @@ void ScanPopup::engagePopup( bool forcePopup, bool giveFocus )
 #endif
 
   if ( ui.pinButton->isChecked() )
-       setWindowTitle( tr( "%1 - %2" ).arg( elideInputWord(), "GoldenDict" ) );
+       setWindowTitle( tr( "%1 - %2" ).arg( elideInputWord(), "GoldenDict Popup" ) );
 
   /// Too large strings make window expand which is probably not what user
   /// wants
@@ -985,7 +985,7 @@ void ScanPopup::pinButtonClicked( bool checked )
     setAttribute(Qt::WA_MacAlwaysShowToolWindow);
 #endif
 
-    setWindowTitle( tr( "%1 - %2" ).arg( elideInputWord(), "GoldenDict" ) );
+    setWindowTitle( tr( "%1 - %2" ).arg( elideInputWord(), "GoldenDict Popup" ) );
     dictionaryBar.setMovable( true );
     hideTimer.stop();
   }
