--- a/base/allocator/partition_allocator/src/partition_alloc/BUILD.gn	2024-02-21 08:20:30.437336000 +0800
+++ b/base/allocator/partition_allocator/src/partition_alloc/BUILD.gn	2024-02-21 21:47:54.926495820 +0800
@@ -513,6 +514,9 @@ if (is_clang_or_gcc) {
       } else if (current_cpu == "riscv64") {
         assert(pcscan_stack_supported)
         sources += [ "starscan/stack/asm/riscv64/push_registers_asm.cc" ]
+      } else if (current_cpu == "loong64") {
+        assert(pcscan_stack_supported)
+        sources += [ "starscan/stack/asm/loong64/push_registers_asm.cc" ]
       } else {
         # To support a trampoline for another arch, please refer to v8/src/heap/base.
         assert(!pcscan_stack_supported)
--- a/components/variations/service/variations_field_trial_creator_base.cc	2024-02-04 10:16:42.170836853 +0800
+++ b/components/variations/service/variations_field_trial_creator_base.cc	2024-02-04 10:12:15.269022073 +0800
@@ -313,10 +313,12 @@ bool VariationsFieldTrialCreatorBase::Se
   auto entropy_providers = metrics_state_manager->CreateEntropyProviders();
 
   bool used_seed = false;
+#if !defined(__loongarch_lp64)
   if (!used_testing_config) {
     used_seed = CreateTrialsFromSeed(*entropy_providers, feature_list.get(),
                                      safe_seed_manager);
   }
+#endif
 
   platform_field_trials->SetUpClientSideFieldTrials(
       used_seed, *entropy_providers, feature_list.get());
--- a/ui/qt/BUILD.gn	2024-03-13 07:38:22.115810400 +0800
+++ b/ui/qt/BUILD.gn	2024-04-04 01:10:56.135260816 +0800
@@ -60,6 +60,7 @@ template("qt_shim") {
   pkg_config("qt" + invoker.qt_version + "_config") {
     packages = [
       "Qt" + invoker.qt_version + "Core",
+      "Qt" + invoker.qt_version + "Gui",
       "Qt" + invoker.qt_version + "Widgets",
     ]
   }
