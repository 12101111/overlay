diff --git a/patches/v8/cherry-pick-ba6cab40612d.patch b/patches/v8/cherry-pick-ba6cab40612d.patch
index 7264e5b471..691f313dd7 100644
--- a/patches/v8/cherry-pick-ba6cab40612d.patch
+++ b/patches/v8/cherry-pick-ba6cab40612d.patch
@@ -42,51 +42,3 @@ index 821b6b80495849129c2c499302ac393278f72e92..e1ca7bebdc8408e21715dd0fc9861a47
    }
    cache_state_.stack_state.pop_back();
  }
-diff --git a/test/mjsunit/mjsunit.status b/test/mjsunit/mjsunit.status
-index f797279ecaf7645061418ee86839df50c4e881a2..1b4e980e90e158fd3a078650ef9b02244cc550fe 100644
---- a/test/mjsunit/mjsunit.status
-+++ b/test/mjsunit/mjsunit.status
-@@ -1708,6 +1708,7 @@
-   'regress/wasm/regress-326156493': [SKIP],
-   'regress/wasm/regress-326894018': [SKIP],
-   'regress/wasm/regress-329032153': [SKIP],
-+  'regress/wasm/regress-343748812': [SKIP],
-   'regress/wasm/regress-crbug-1338980': [SKIP],
-   'regress/wasm/regress-crbug-1355070': [SKIP],
-   'regress/wasm/regress-crbug-1356718': [SKIP],
-diff --git a/test/mjsunit/regress/wasm/regress-343748812.js b/test/mjsunit/regress/wasm/regress-343748812.js
-new file mode 100644
-index 0000000000000000000000000000000000000000..8dc456c413665e97c5f8e48f95a65370cf051753
---- /dev/null
-+++ b/test/mjsunit/regress/wasm/regress-343748812.js
-@@ -0,0 +1,30 @@
-+// Copyright 2024 the V8 project authors. All rights reserved.
-+// Use of this source code is governed by a BSD-style license that can be
-+// found in the LICENSE file.
-+
-+d8.file.execute('test/mjsunit/wasm/wasm-module-builder.js');
-+
-+const builder = new WasmModuleBuilder();
-+let $sig0 = builder.addType(kSig_v_v);
-+let $sig7 = builder.addType(
-+    makeSig([], [ kWasmExternRef, kWasmS128, kWasmExternRef ]));
-+let $func0 = builder.addImport('imports', 'func0', $sig0);
-+builder.addFunction("main", $sig0).exportFunc()
-+  .addLocals(kWasmExternRef, 3)
-+  .addBody([
-+    kExprTry, $sig7,
-+      kExprCallFunction, $func0,
-+      kExprUnreachable,
-+    kExprCatchAll,
-+      kExprRefNull, kExternRefCode,
-+      ...wasmS128Const([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
-+      kExprRefNull, kExternRefCode,
-+    kExprEnd,
-+    kExprDrop,
-+    kExprDrop,
-+    kExprDrop,
-+  ]);
-+
-+var instance = builder.instantiate({'imports': { 'func0': () => {} }});
-+
-+assertThrows(instance.exports.main, WebAssembly.RuntimeError, /unreachable/);
diff --git a/patches/chromium/cherry-pick-d9f7652c867c.patch b/patches/chromium/cherry-pick-d9f7652c867c.patch
index 2c21036e8a..956a826471 100644
--- a/patches/chromium/cherry-pick-d9f7652c867c.patch
+++ b/patches/chromium/cherry-pick-d9f7652c867c.patch
@@ -47,113 +47,3 @@ index bcfa17448f3051dc2b292aa3e19dbfb915cf692a..4922359605b53c6b9ac5339f6ce6b361
  }
  
  void WebTransport::OnOutgoingStreamClosed(uint32_t stream_id) {
-diff --git a/third_party/blink/renderer/modules/webtransport/web_transport_test.cc b/third_party/blink/renderer/modules/webtransport/web_transport_test.cc
-index 01f5a0fca58d88e342298e03231dd2263ca5a678..fc05ad637888df648f8692683f8a626c8d6a38dd 100644
---- a/third_party/blink/renderer/modules/webtransport/web_transport_test.cc
-+++ b/third_party/blink/renderer/modules/webtransport/web_transport_test.cc
-@@ -1959,6 +1959,21 @@ TEST_F(WebTransportTest, OnClosed) {
-   EXPECT_EQ(close_info->reason(), "reason");
- }
- 
-+// Regression test for https://crbug.com/347710668.
-+TEST_F(WebTransportTest, ClosedAccessorCalledAfterOnClosed) {
-+  V8TestingScope scope;
-+
-+  auto* web_transport =
-+      CreateAndConnectSuccessfully(scope, "https://example.com");
-+
-+  web_transport->OnClosed(
-+      network::mojom::blink::WebTransportCloseInfo::New(99, "reason"),
-+      network::mojom::blink::WebTransportStats::New());
-+
-+  // If this doesn't crash then the test passed.
-+  EXPECT_FALSE(web_transport->closed(scope.GetScriptState()).IsEmpty());
-+}
-+
- TEST_F(WebTransportTest, OnClosedWithNull) {
-   V8TestingScope scope;
-   v8::Isolate* isolate = scope.GetIsolate();
-diff --git a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any-expected.txt b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any-expected.txt
-index d4e43edbd19a9eb16f3384c1c95e5c3d1a2f2619..09e2bbddaa40e1cfc192d3adbeb9538e7aeaebfe 100644
---- a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any-expected.txt
-+++ b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any-expected.txt
-@@ -1,4 +1,5 @@
- This is a testharness.js-based test.
-+Harness Error. harness_status.status = 1 , harness_status.message = Unhandled rejection: promise_rejects_dom: function "function() { throw e }" threw object "NetworkError: Failed to execute 'createBidirectionalStream' on 'WebTransport': No connection." that is not a DOMException InvalidStateError: property "code" is equal to 19, expected 11
- [FAIL] opening unidirectional stream before ready
-   promise_test: Unhandled rejection with value: object "NetworkError: Failed to execute 'createUnidirectionalStream' on 'WebTransport': No connection."
- [FAIL] opening bidirectional stream before ready
-diff --git a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.js b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.js
-index 0d8579584fbb21e74595588f663ef21c3b028c63..d69967ba70bb716f8664f973fe83d4158ba6da89 100644
---- a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.js
-+++ b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.js
-@@ -163,3 +163,24 @@ promise_test(async t => {
-   const wt = new WebTransport(webtransport_url('server-close.py'));
-   promise_rejects_dom(t, "InvalidStateError", wt.createBidirectionalStream());
- }, 'server initiated closure while opening bidirectional stream before ready');
-+
-+// Regression test for https://crbug.com/347710668.
-+promise_test(async t => {
-+  const wt = new WebTransport(webtransport_url('server-read-then-close.py'));
-+  add_completion_callback(() => wt.close());
-+  await wt.ready;
-+
-+  const bidi_reader = wt.incomingBidirectionalStreams.getReader();
-+  const { value: bidi } = await bidi_reader.read();
-+
-+  bidi.writable.getWriter().write(new TextEncoder().encode('some data'));
-+  const reader = bidi.readable.getReader();
-+  await reader.closed.catch(t.step_func(
-+      e => assert_true(e instanceof WebTransportError)));
-+
-+  // The WebTransport session will already be closed.
-+  const {reason, closeCode} = await wt.closed;
-+
-+  assert_equals(reason, '', 'reason should be default');
-+  assert_equals(closeCode, 0, 'closeCode should be default');
-+}, 'reading closed property after close should work');
-diff --git a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.serviceworker-expected.txt b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.serviceworker-expected.txt
-index d4e43edbd19a9eb16f3384c1c95e5c3d1a2f2619..09e2bbddaa40e1cfc192d3adbeb9538e7aeaebfe 100644
---- a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.serviceworker-expected.txt
-+++ b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.serviceworker-expected.txt
-@@ -1,4 +1,5 @@
- This is a testharness.js-based test.
-+Harness Error. harness_status.status = 1 , harness_status.message = Unhandled rejection: promise_rejects_dom: function "function() { throw e }" threw object "NetworkError: Failed to execute 'createBidirectionalStream' on 'WebTransport': No connection." that is not a DOMException InvalidStateError: property "code" is equal to 19, expected 11
- [FAIL] opening unidirectional stream before ready
-   promise_test: Unhandled rejection with value: object "NetworkError: Failed to execute 'createUnidirectionalStream' on 'WebTransport': No connection."
- [FAIL] opening bidirectional stream before ready
-diff --git a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.sharedworker-expected.txt b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.sharedworker-expected.txt
-index d4e43edbd19a9eb16f3384c1c95e5c3d1a2f2619..09e2bbddaa40e1cfc192d3adbeb9538e7aeaebfe 100644
---- a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.sharedworker-expected.txt
-+++ b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.sharedworker-expected.txt
-@@ -1,4 +1,5 @@
- This is a testharness.js-based test.
-+Harness Error. harness_status.status = 1 , harness_status.message = Unhandled rejection: promise_rejects_dom: function "function() { throw e }" threw object "NetworkError: Failed to execute 'createBidirectionalStream' on 'WebTransport': No connection." that is not a DOMException InvalidStateError: property "code" is equal to 19, expected 11
- [FAIL] opening unidirectional stream before ready
-   promise_test: Unhandled rejection with value: object "NetworkError: Failed to execute 'createUnidirectionalStream' on 'WebTransport': No connection."
- [FAIL] opening bidirectional stream before ready
-diff --git a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.worker-expected.txt b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.worker-expected.txt
-index d4e43edbd19a9eb16f3384c1c95e5c3d1a2f2619..09e2bbddaa40e1cfc192d3adbeb9538e7aeaebfe 100644
---- a/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.worker-expected.txt
-+++ b/third_party/blink/web_tests/external/wpt/webtransport/close.https.any.worker-expected.txt
-@@ -1,4 +1,5 @@
- This is a testharness.js-based test.
-+Harness Error. harness_status.status = 1 , harness_status.message = Unhandled rejection: promise_rejects_dom: function "function() { throw e }" threw object "NetworkError: Failed to execute 'createBidirectionalStream' on 'WebTransport': No connection." that is not a DOMException InvalidStateError: property "code" is equal to 19, expected 11
- [FAIL] opening unidirectional stream before ready
-   promise_test: Unhandled rejection with value: object "NetworkError: Failed to execute 'createUnidirectionalStream' on 'WebTransport': No connection."
- [FAIL] opening bidirectional stream before ready
-diff --git a/third_party/blink/web_tests/external/wpt/webtransport/handlers/server-read-then-close.py b/third_party/blink/web_tests/external/wpt/webtransport/handlers/server-read-then-close.py
-new file mode 100644
-index 0000000000000000000000000000000000000000..7f992e0dcca3ae62277cac0fa39355fce3e57be0
---- /dev/null
-+++ b/third_party/blink/web_tests/external/wpt/webtransport/handlers/server-read-then-close.py
-@@ -0,0 +1,9 @@
-+def session_established(session):
-+    stream_id = session.create_bidirectional_stream()
-+
-+
-+def stream_data_received(session,
-+                         stream_id: int,
-+                         data: bytes,
-+                         stream_ended: bool):
-+    session.close(None)
