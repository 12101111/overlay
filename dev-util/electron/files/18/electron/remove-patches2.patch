diff --git a/patches/nan/use_new_constructor_for_scriptorigin.patch b/patches/nan/use_new_constructor_for_scriptorigin.patch
deleted file mode 100644
index dfa36b750a..0000000000
--- a/patches/nan/use_new_constructor_for_scriptorigin.patch
+++ /dev/null
@@ -1,42 +0,0 @@
-From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
-From: Jeremy Rose <nornagon@nornagon.net>
-Date: Fri, 28 Jan 2022 13:46:07 -0800
-Subject: use new constructor for ScriptOrigin
-
-https://chromium-review.googlesource.com/c/v8/v8/+/3395880
-
-diff --git a/test/cpp/nannew.cpp b/test/cpp/nannew.cpp
-index 64c857996c4626f3a447bdb796d4d581a37d9299..95a12f9521b8c9bed0e5eed85b6e56917069ea09 100644
---- a/test/cpp/nannew.cpp
-+++ b/test/cpp/nannew.cpp
-@@ -248,7 +248,7 @@ NAN_METHOD(testScript) {
- 
- #if defined(V8_MAJOR_VERSION) && (V8_MAJOR_VERSION > 8 ||                      \
-   (V8_MAJOR_VERSION == 8 && defined(V8_MINOR_VERSION) && V8_MINOR_VERSION >= 9))
--  ScriptOrigin origin(New("foo").ToLocalChecked(), 5);
-+  ScriptOrigin origin(v8::Isolate::GetCurrent(), New("foo").ToLocalChecked(), 5);
- #else
-   ScriptOrigin origin(New("foo").ToLocalChecked(), New(5));
- #endif
-diff --git a/test/cpp/news.cpp b/test/cpp/news.cpp
-index 5b54c0cedaaa824be71b8c6fee948139a34d3310..f0aa65cc80741d57ba6675f7d5d5908b24f601c5 100644
---- a/test/cpp/news.cpp
-+++ b/test/cpp/news.cpp
-@@ -114,7 +114,7 @@ NAN_METHOD(NewScript) {
- }
- 
- NAN_METHOD(NewScript2) {
--  v8::ScriptOrigin origin(New<v8::String>("x").ToLocalChecked());
-+  v8::ScriptOrigin origin(v8::Isolate::GetCurrent(), New<v8::String>("x").ToLocalChecked());
-   v8::Local<UnboundScript> script =
-       New<UnboundScript>(
-           New("2+4").ToLocalChecked()
-@@ -131,7 +131,7 @@ NAN_METHOD(CompileScript) {
- }
- 
- NAN_METHOD(CompileScript2) {
--  v8::ScriptOrigin origin(New<v8::String>("x").ToLocalChecked());
-+  v8::ScriptOrigin origin(v8::Isolate::GetCurrent(), New<v8::String>("x").ToLocalChecked());
-   v8::Local<BoundScript> script =
-       CompileScript(New("2+4").ToLocalChecked(), origin).ToLocalChecked();
-   info.GetReturnValue().Set(
diff --git a/patches/chromium/cherry-pick-6b66a45021a0.patch b/patches/chromium/cherry-pick-6b66a45021a0.patch
index cc5350e69e..88037e12df 100644
--- a/patches/chromium/cherry-pick-6b66a45021a0.patch
+++ b/patches/chromium/cherry-pick-6b66a45021a0.patch
@@ -219,41 +219,3 @@ index aa65517a568aa0b324b2c8cca8f60bb532ba085a..11815bca2741002dd8595af026ef402b
    // While this view may be a background extension page, it can spawn a visible
    // render view. So we just assume that the new one is not another background
    // page instead of passing on our own value.
-diff --git a/third_party/blink/web_tests/wpt_internal/fenced_frame/consume-user-activation.https.html b/third_party/blink/web_tests/wpt_internal/fenced_frame/consume-user-activation.https.html
-index d78d08e18a803f66d5136b193abfa26fd7ab087a..e4ad20d17b7fdcec69f25e652dab967f9b52cf65 100644
---- a/third_party/blink/web_tests/wpt_internal/fenced_frame/consume-user-activation.https.html
-+++ b/third_party/blink/web_tests/wpt_internal/fenced_frame/consume-user-activation.https.html
-@@ -88,11 +88,7 @@ promise_test(async () => {
- 
-   // Check that B's transient user activation was consumed.
-   assert_activations(true, true, "A");
--  // TODO(crbug.com/1291210): B should be inactive after consuming the
--  // transient user activation, but due to a preexisting bug it isn't.
--  // Replace with this once fixed:
--  // await B.execute(assert_activations, [true, false, "B"]);
--  await B.execute(assert_activations, [true, true, "B"]);
-+  await B.execute(assert_activations, [true, false, "B"]);
- 
- }, 'user-activation');
- </script>
-diff --git a/third_party/blink/web_tests/wpt_internal/fenced_frame/restrict-size.https.html b/third_party/blink/web_tests/wpt_internal/fenced_frame/restrict-size.https.html
-new file mode 100644
-index 0000000000000000000000000000000000000000..5668407d7e1e6ac7840fc47b76869787cb3f3d63
---- /dev/null
-+++ b/third_party/blink/web_tests/wpt_internal/fenced_frame/restrict-size.https.html
-@@ -0,0 +1,15 @@
-+<!DOCTYPE html>
-+<title>Test fencedframe size restrictions in opaque ads mode.</title>
-+<script src="/resources/testharness.js"></script>
-+<script src="/resources/testharnessreport.js"></script>
-+<script src="/common/utils.js"></script>
-+<script src="/common/dispatcher/dispatcher.js"></script>
-+<script src="resources/utils.js"></script>
-+
-+<body>
-+<script>
-+promise_test(async () => {
-+  const frame = attachFencedFrameContext();
-+}, 'restrict fencedframe size');
-+</script>
-+</body>
diff --git a/patches/chromium/cherry-pick-b03797bdb1df.patch b/patches/chromium/cherry-pick-b03797bdb1df.patch
index 14985218cd..3cb4a81cc0 100644
--- a/patches/chromium/cherry-pick-b03797bdb1df.patch
+++ b/patches/chromium/cherry-pick-b03797bdb1df.patch
@@ -1,3 +1,4 @@
+diff --git a/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html b/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html
 From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
 From: Xiaocheng Hu <xiaochengh@chromium.org>
 Date: Mon, 2 May 2022 23:43:40 +0000
@@ -131,65 +132,3 @@ index 4ee332fa16a1bda54e6ba99c8063876fb046adaa..463fd9a37671b92c9af68ff5f3c0e8dd
  
    return CreateFragmentFromMarkup(document, markup, base_url,
                                    kDisallowScriptingAndPluginContent);
-diff --git a/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html b/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html
-index c03ca90d492a5e2af883f68811baa7660ef1cdc2..1af77f8faa4501f577e28297f013e170775bc86a 100644
---- a/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html
-+++ b/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html
-@@ -32,6 +32,6 @@ selection_test(
-       <use href=data:application/xml;base64,PHN2ZyBpZD0neCcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJz4KPGEgaHJlZj0namF2YXNjcmlwdDphbGVydCgxMjMpJz4KICAgIDxyZWN0IHdpZHRoPScxMDAlJyBoZWlnaHQ9JzEwMCUnIGZpbGw9J2xpZ2h0Ymx1ZScgLz4KICAgICA8dGV4dCB4PScwJyB5PScwJyBmaWxsPSdibGFjayc+CiAgICAgICA8dHNwYW4geD0nMCcgZHk9JzEuMmVtJz5Pb3BzLCB0aGVyZSdzIHNvbWV0aGluZyB3cm9uZyB3aXRoIHRoZSBwYWdlITwvdHNwYW4+CiAgICAgPHRzcGFuIHg9JzAnIGR5PScxLjJlbSc+UGxlYXNlIGNsaWNrIGhlcmUgdG8gcmVsb2FkLjwvdHNwYW4+Cjwvc3ZnPg==#x>"></noscript>asdasd`);
-     selection.document.execCommand('paste');
-   },
--  '<div contenteditable>|<noscript>&lt;u title="</noscript><div contenteditable="false"><svg></svg></div></div>',
-+  '<div contenteditable><div><br></div><div>      <u title="</div><div>      </div><div>      ">asdasd|</div></div>',
-   'Paste blocks data URI in SVG use element injection via <noscript>');
- </script>
-diff --git a/third_party/blink/web_tests/external/wpt/clipboard-apis/async-navigator-clipboard-read-sanitize.https.html b/third_party/blink/web_tests/external/wpt/clipboard-apis/async-navigator-clipboard-read-sanitize.https.html
-new file mode 100644
-index 0000000000000000000000000000000000000000..9e0ab2ee740f85ea4e9de9d3f1d2ac43bee5a985
---- /dev/null
-+++ b/third_party/blink/web_tests/external/wpt/clipboard-apis/async-navigator-clipboard-read-sanitize.https.html
-@@ -0,0 +1,44 @@
-+<!doctype html>
-+<meta charset="utf-8">
-+<title>Async Clipboard.read() should sanitize text/html</title>
-+<link rel="help" href="https://w3c.github.io/clipboard-apis/#dom-clipboard-read">
-+<link rel="help" href="https://bugs.chromium.org/p/chromium/issues/detail?id=1315563">
-+<script src="/resources/testharness.js"></script>
-+<script src="/resources/testharnessreport.js"></script>
-+<script src="/resources/testdriver.js"></script>
-+<script src="/resources/testdriver-vendor.js"></script>
-+
-+<p><button id="button">Put payload in the clipboard</button></p>
-+<div id="output"></div>
-+
-+<script>
-+let testFailed = false;
-+function fail() {
-+  testFailed = true;
-+}
-+
-+button.onclick = () => document.execCommand('copy');
-+document.oncopy = ev => {
-+  ev.preventDefault();
-+  ev.clipboardData.setData(
-+      'text/html',
-+      `<form><math><mtext></form><form><mglyph><xmp></math><img src=invalid onerror=fail()></xmp>`);
-+};
-+
-+promise_test(async test => {
-+  await test_driver.set_permission({name: 'clipboard-read'}, 'granted');
-+  await test_driver.click(button);
-+
-+  const items = await navigator.clipboard.read();
-+  const htmlBlob = await items[0].getType("text/html");
-+  const html = await htmlBlob.text();
-+
-+  // This inserts an image with `onerror` handler if `html` is not properly sanitized
-+  output.innerHTML = html;
-+
-+  // Allow the 'error' event to be dispatched asynchronously
-+  await new Promise(resolve => test.step_timeout(resolve, 100));
-+
-+  assert_false(testFailed);
-+});
-+</script>
diff --git a/patches/v8/cherry-pick-44c4e56fea2c.patch b/patches/v8/cherry-pick-44c4e56fea2c.patch
index 8e61e340d8..7126eea4e5 100644
--- a/patches/v8/cherry-pick-44c4e56fea2c.patch
+++ b/patches/v8/cherry-pick-44c4e56fea2c.patch
@@ -115,71 +115,3 @@ index 2ddcedaa5815d6905b587e733c7c276aea234e08..24d474332bec9a83391d44b53aa955f8
    weak_cell.set_unregister_token(undefined);
    weak_cell.set_key_list_prev(undefined);
    weak_cell.set_key_list_next(undefined);
-diff --git a/test/cctest/test-js-weak-refs.cc b/test/cctest/test-js-weak-refs.cc
-index 8974bdf6dba65be319afbfdfc66641d27ed14a07..eb6ca2d73685b437978fac642190c8d653f4c73a 100644
---- a/test/cctest/test-js-weak-refs.cc
-+++ b/test/cctest/test-js-weak-refs.cc
-@@ -853,9 +853,7 @@ TEST(TestRemoveUnregisterToken) {
- 
-   finalization_registry->RemoveUnregisterToken(
-       JSReceiver::cast(*token2), isolate,
--      [undefined](WeakCell matched_cell) {
--        matched_cell.set_unregister_token(*undefined);
--      },
-+      JSFinalizationRegistry::kKeepMatchedCellsInRegistry,
-       [](HeapObject, ObjectSlot, Object) {});
- 
-   // Both weak_cell2a and weak_cell2b remain on the weak cell chains.
-@@ -1024,5 +1022,52 @@ TEST(UnregisterTokenHeapVerifier) {
-   EmptyMessageQueues(isolate);
- }
- 
-+TEST(UnregisteredAndUnclearedCellHeapVerifier) {
-+  if (!FLAG_incremental_marking) return;
-+  ManualGCScope manual_gc_scope;
-+#ifdef VERIFY_HEAP
-+  FLAG_verify_heap = true;
-+#endif
-+
-+  CcTest::InitializeVM();
-+  v8::Isolate* isolate = CcTest::isolate();
-+  Heap* heap = CcTest::heap();
-+  v8::HandleScope outer_scope(isolate);
-+
-+  {
-+    // Make a new FinalizationRegistry and register an object with a token.
-+    v8::HandleScope scope(isolate);
-+    CompileRun(
-+        "var token = {}; "
-+        "var registry = new FinalizationRegistry(function () {}); "
-+        "registry.register({}, undefined, token);");
-+  }
-+
-+  // Start incremental marking to activate the marking barrier.
-+  heap::SimulateIncrementalMarking(heap, false);
-+
-+  {
-+    // Make a WeakCell list with length >1, then unregister with the token to
-+    // the WeakCell from the registry. The linked list manipulation keeps the
-+    // unregistered WeakCell alive (i.e. not put into cleared_cells) due to the
-+    // marking barrier from incremental marking. Then make the original token
-+    // collectible.
-+    v8::HandleScope scope(isolate);
-+    CompileRun(
-+        "registry.register({}); "
-+        "registry.unregister(token); "
-+        "token = 0;");
-+  }
-+
-+  // Trigger GC.
-+  CcTest::CollectAllGarbage();
-+  CcTest::CollectAllGarbage();
-+
-+  // Pump message loop to run the finalizer task, then the incremental marking
-+  // task. The verifier will verify that live WeakCells don't point to dead
-+  // unregister tokens.
-+  EmptyMessageQueues(isolate);
-+}
-+
- }  // namespace internal
- }  // namespace v8
diff --git a/patches/v8/version_10_2_154_10_cherry-pick.patch b/patches/v8/version_10_2_154_10_cherry-pick.patch
index 29ffdee8e4..8facc808b5 100644
--- a/patches/v8/version_10_2_154_10_cherry-pick.patch
+++ b/patches/v8/version_10_2_154_10_cherry-pick.patch
@@ -16,19 +16,6 @@ Cr-Commit-Position: refs/branch-heads/10.2@{#18}
 Cr-Branched-From: 374091f382e88095694c1283cbdc2acddc1b1417-refs/heads/10.2.154@{#1}
 Cr-Branched-From: f0c353f6315eeb2212ba52478983a3b3af07b5b1-refs/heads/main@{#79976}
 
-diff --git a/include/v8-version.h b/include/v8-version.h
-index 7999dcb13f34b68d12660cdc0f6767e5e8bf6d18..ebd8289678fcf2d746e3a67a49c086058651fb28 100644
---- a/include/v8-version.h
-+++ b/include/v8-version.h
-@@ -11,7 +11,7 @@
- #define V8_MAJOR_VERSION 10
- #define V8_MINOR_VERSION 0
- #define V8_BUILD_NUMBER 139
--#define V8_PATCH_LEVEL 17
-+#define V8_PATCH_LEVEL 18
- 
- // Use 1 for candidates and 0 otherwise.
- // (Boolean macro values are not supported by all preprocessors.)
 diff --git a/src/compiler/pipeline.cc b/src/compiler/pipeline.cc
 index 6ea2df76c863ed0466ee96fcf1ad5736192c6b44..555942c2be2287d41d443d109e305c4858579447 100644
 --- a/src/compiler/pipeline.cc
