diff --git a/patches/v8/cherry-pick-36b66b5cc991.patch b/patches/v8/cherry-pick-36b66b5cc991.patch
index 49ddf5c39f..f95386647e 100644
--- a/patches/v8/cherry-pick-36b66b5cc991.patch
+++ b/patches/v8/cherry-pick-36b66b5cc991.patch
@@ -41,102 +41,3 @@ index 1df13df72c29f804168ab1f57117650922378a07..d823bba604936c1c99b4e3aea694afc8
        }
  
        case LookupIterator::ACCESSOR: {
-diff --git a/test/cctest/test-api-interceptors.cc b/test/cctest/test-api-interceptors.cc
-index 909795ece407ac2089f15e562d308733371fbb65..7eb96a54f77519a8b968d40fab4d01070e0ed179 100644
---- a/test/cctest/test-api-interceptors.cc
-+++ b/test/cctest/test-api-interceptors.cc
-@@ -60,6 +60,16 @@ void EmptyInterceptorDeleter(
- void EmptyInterceptorEnumerator(
-     const v8::PropertyCallbackInfo<v8::Array>& info) {}
- 
-+void EmptyInterceptorDefinerWithSideEffect(
-+    Local<Name> name, const v8::PropertyDescriptor& desc,
-+    const v8::PropertyCallbackInfo<v8::Value>& info) {
-+  ApiTestFuzzer::Fuzz();
-+  v8::Local<v8::Value> result = CompileRun("interceptor_definer_side_effect()");
-+  if (!result->IsNull()) {
-+    info.GetReturnValue().Set(result);
-+  }
-+}
-+
- void SimpleAccessorGetter(Local<String> name,
-                           const v8::PropertyCallbackInfo<v8::Value>& info) {
-   Local<Object> self = info.This().As<Object>();
-@@ -869,13 +879,17 @@ THREADED_TEST(InterceptorHasOwnPropertyCausingGC) {
- namespace {
- 
- void CheckInterceptorIC(v8::GenericNamedPropertyGetterCallback getter,
-+                        v8::GenericNamedPropertySetterCallback setter,
-                         v8::GenericNamedPropertyQueryCallback query,
--                        const char* source, int expected) {
-+                        v8::GenericNamedPropertyDefinerCallback definer,
-+                        v8::PropertyHandlerFlags flags, const char* source,
-+                        int expected) {
-   v8::Isolate* isolate = CcTest::isolate();
-   v8::HandleScope scope(isolate);
-   v8::Local<v8::ObjectTemplate> templ = ObjectTemplate::New(isolate);
-   templ->SetHandler(v8::NamedPropertyHandlerConfiguration(
--      getter, nullptr, query, nullptr, nullptr, v8_str("data")));
-+      getter, setter, query, nullptr /* deleter */, nullptr /* enumerator */,
-+      definer, nullptr /* descriptor */, v8_str("data"), flags));
-   LocalContext context;
-   context->Global()
-       ->Set(context.local(), v8_str("o"),
-@@ -885,9 +899,17 @@ void CheckInterceptorIC(v8::GenericNamedPropertyGetterCallback getter,
-   CHECK_EQ(expected, value->Int32Value(context.local()).FromJust());
- }
- 
-+void CheckInterceptorIC(v8::GenericNamedPropertyGetterCallback getter,
-+                        v8::GenericNamedPropertyQueryCallback query,
-+                        const char* source, int expected) {
-+  CheckInterceptorIC(getter, nullptr, query, nullptr,
-+                     v8::PropertyHandlerFlags::kNone, source, expected);
-+}
-+
- void CheckInterceptorLoadIC(v8::GenericNamedPropertyGetterCallback getter,
-                             const char* source, int expected) {
--  CheckInterceptorIC(getter, nullptr, source, expected);
-+  CheckInterceptorIC(getter, nullptr, nullptr, nullptr,
-+                     v8::PropertyHandlerFlags::kNone, source, expected);
- }
- 
- void InterceptorLoadICGetter(Local<Name> name,
-@@ -1581,6 +1603,38 @@ THREADED_TEST(InterceptorStoreICWithSideEffectfulCallbacks) {
-                      19);
- }
- 
-+THREADED_TEST(InterceptorDefineICWithSideEffectfulCallbacks) {
-+  CheckInterceptorIC(EmptyInterceptorGetter, EmptyInterceptorSetter,
-+                     EmptyInterceptorQuery,
-+                     EmptyInterceptorDefinerWithSideEffect,
-+                     v8::PropertyHandlerFlags::kNonMasking,
-+                     "let inside_side_effect = false;"
-+                     "let interceptor_definer_side_effect = function() {"
-+                     "  if (!inside_side_effect) {"
-+                     "    inside_side_effect = true;"
-+                     "    o.y = 153;"
-+                     "    inside_side_effect = false;"
-+                     "  }"
-+                     "  return null;"
-+                     "};"
-+                     "class Base {"
-+                     "  constructor(arg) {"
-+                     "    return arg;"
-+                     "  }"
-+                     "}"
-+                     "class ClassWithField extends Base {"
-+                     "  y = (() => {"
-+                     "    return 42;"
-+                     "  })();"
-+                     "  constructor(arg) {"
-+                     "    super(arg);"
-+                     "  }"
-+                     "}"
-+                     "new ClassWithField(o);"
-+                     "o.y",
-+                     42);
-+}
-+
- static void InterceptorStoreICSetter(
-     Local<Name> key, Local<Value> value,
-     const v8::PropertyCallbackInfo<v8::Value>& info) {
diff --git a/patches/chromium/cherry-pick-a1dc371d6680.patch b/patches/chromium/cherry-pick-a1dc371d6680.patch
index efa6892b4a..6b10d25f35 100644
--- a/patches/chromium/cherry-pick-a1dc371d6680.patch
+++ b/patches/chromium/cherry-pick-a1dc371d6680.patch
@@ -125,289 +125,3 @@ index bba6f5eb58d56e9372f9cef8e38e2f1493a94678..2ecc28054831e076f85832d97bd95a73
    }
    return USBAlternateInterface::Create(this, 0);
  }
-diff --git a/third_party/blink/web_tests/external/wpt/webusb/resources/fake-devices.js b/third_party/blink/web_tests/external/wpt/webusb/resources/fake-devices.js
-index 975d2242c949740217c050beea72db908ef46fc7..c5c5cadaa6af48f676565775d1dc8e27efffc3a2 100644
---- a/third_party/blink/web_tests/external/wpt/webusb/resources/fake-devices.js
-+++ b/third_party/blink/web_tests/external/wpt/webusb/resources/fake-devices.js
-@@ -16,75 +16,160 @@ let fakeDeviceInit = {
-   productName: 'The amazing imaginary printer',
-   serialNumber: '4',
-   activeConfigurationValue: 0,
--  configurations: [{
--    configurationValue: 1,
--    configurationName: 'Printer Mode',
--    interfaces: [{
--      interfaceNumber: 0,
--      alternates: [{
--        alternateSetting: 0,
--        interfaceClass: 0xff,
--        interfaceSubclass: 0x01,
--        interfaceProtocol: 0x01,
--        interfaceName: 'Control',
--        endpoints: [{
--          endpointNumber: 1,
--          direction: 'in',
--          type: 'interrupt',
--          packetSize: 8
--        }]
-+  configurations: [
-+    {
-+      configurationValue: 1,
-+      configurationName: 'Printer Mode',
-+      interfaces: [
-+        {
-+          interfaceNumber: 0,
-+          alternates: [{
-+            alternateSetting: 0,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x01,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Control',
-+            endpoints: [{
-+              endpointNumber: 1,
-+              direction: 'in',
-+              type: 'interrupt',
-+              packetSize: 8
-+            }]
-+          }]
-+        },
-+        {
-+          interfaceNumber: 1,
-+          alternates: [{
-+            alternateSetting: 0,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x02,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Data',
-+            endpoints: [
-+              {
-+                endpointNumber: 2,
-+                direction: 'in',
-+                type: 'bulk',
-+                packetSize: 1024
-+              },
-+              {
-+                endpointNumber: 2,
-+                direction: 'out',
-+                type: 'bulk',
-+                packetSize: 1024
-+              }
-+            ]
-+          }]
-+        }
-+      ]
-+    },
-+    {
-+      configurationValue: 2,
-+      configurationName: 'Fighting Robot Mode',
-+      interfaces: [{
-+        interfaceNumber: 0,
-+        alternates: [
-+          {
-+            alternateSetting: 0,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x42,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Disabled',
-+            endpoints: []
-+          },
-+          {
-+            alternateSetting: 1,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x42,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Activate!',
-+            endpoints: [
-+              {
-+                endpointNumber: 1,
-+                direction: 'in',
-+                type: 'isochronous',
-+                packetSize: 1024
-+              },
-+              {
-+                endpointNumber: 1,
-+                direction: 'out',
-+                type: 'isochronous',
-+                packetSize: 1024
-+              }
-+            ]
-+          }
-+        ]
-       }]
--    }, {
--      interfaceNumber: 1,
--      alternates: [{
--        alternateSetting: 0,
--        interfaceClass: 0xff,
--        interfaceSubclass: 0x02,
--        interfaceProtocol: 0x01,
--        interfaceName: 'Data',
--        endpoints: [{
--          endpointNumber: 2,
--          direction: 'in',
--          type: 'bulk',
--          packetSize: 1024
--        }, {
--          endpointNumber: 2,
--          direction: 'out',
--          type: 'bulk',
--          packetSize: 1024
--        }]
--      }]
--    }]
--  }, {
--    configurationValue: 2,
--    configurationName: 'Fighting Robot Mode',
--    interfaces: [{
--      interfaceNumber: 0,
--      alternates: [{
--        alternateSetting: 0,
--        interfaceClass: 0xff,
--        interfaceSubclass: 0x42,
--        interfaceProtocol: 0x01,
--        interfaceName: 'Disabled',
--        endpoints: []
--      }, {
--        alternateSetting: 1,
--        interfaceClass: 0xff,
--        interfaceSubclass: 0x42,
--        interfaceProtocol: 0x01,
--        interfaceName: 'Activate!',
--        endpoints: [{
--          endpointNumber: 1,
--          direction: 'in',
--          type: 'isochronous',
--          packetSize: 1024
--        }, {
--          endpointNumber: 1,
--          direction: 'out',
--          type: 'isochronous',
--          packetSize: 1024
--        }]
--      }]
--    }]
--  }]
-+    },
-+    {
-+      configurationValue: 3,
-+      configurationName: 'Non-sequential interface number and alternate ' +
-+          'setting Mode',
-+      interfaces: [
-+        {
-+          interfaceNumber: 0,
-+          alternates: [
-+            {
-+              alternateSetting: 0,
-+              interfaceClass: 0xff,
-+              interfaceSubclass: 0x01,
-+              interfaceProtocol: 0x01,
-+              interfaceName: 'Control',
-+              endpoints: [{
-+                endpointNumber: 1,
-+                direction: 'in',
-+                type: 'interrupt',
-+                packetSize: 8
-+              }]
-+            },
-+            {
-+              alternateSetting: 2,
-+              interfaceClass: 0xff,
-+              interfaceSubclass: 0x02,
-+              interfaceProtocol: 0x01,
-+              interfaceName: 'Data',
-+              endpoints: [
-+                {
-+                  endpointNumber: 2,
-+                  direction: 'in',
-+                  type: 'bulk',
-+                  packetSize: 1024
-+                },
-+                {
-+                  endpointNumber: 2,
-+                  direction: 'out',
-+                  type: 'bulk',
-+                  packetSize: 1024
-+                }
-+              ]
-+            }
-+          ]
-+        },
-+        {
-+          interfaceNumber: 2,
-+          alternates: [{
-+            alternateSetting: 0,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x02,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Data',
-+            endpoints: [
-+              {
-+                endpointNumber: 2,
-+                direction: 'in',
-+                type: 'bulk',
-+                packetSize: 1024
-+              },
-+              {
-+                endpointNumber: 2,
-+                direction: 'out',
-+                type: 'bulk',
-+                packetSize: 1024
-+              }
-+            ]
-+          }]
-+        }
-+      ]
-+    }
-+  ]
- };
-diff --git a/third_party/blink/web_tests/external/wpt/webusb/usbDevice.https.any.js b/third_party/blink/web_tests/external/wpt/webusb/usbDevice.https.any.js
-index 5bfd841d5248e91a5cabf10d00d78db23d11f0e5..527d238d69b703b1fcf5d8a001d02e9f87b5689a 100644
---- a/third_party/blink/web_tests/external/wpt/webusb/usbDevice.https.any.js
-+++ b/third_party/blink/web_tests/external/wpt/webusb/usbDevice.https.any.js
-@@ -236,10 +236,11 @@ usb_test(() => {
-   return getFakeDevice().then(({ device }) => {
-     assert_equals(device.configuration, null);
-     return device.open()
--      .then(() => assertRejectsWithError(
--            device.selectConfiguration(3), 'NotFoundError',
--            'The configuration value provided is not supported by the device.'))
--      .then(() => device.close());
-+        .then(
-+            () => assertRejectsWithError(
-+                device.selectConfiguration(10), 'NotFoundError',
-+                'The configuration value provided is not supported by the device.'))
-+        .then(() => device.close());
-   });
- }, 'selectConfiguration rejects on invalid configurations');
- 
-@@ -431,6 +432,30 @@ usb_test(() => {
-   });
- }, 'can select an alternate interface');
- 
-+usb_test(
-+    async () => {
-+      const {device} = await getFakeDevice();
-+      await device.open();
-+      await device.selectConfiguration(3);
-+      await device.claimInterface(2);
-+      await device.selectAlternateInterface(2, 0);
-+      await device.close();
-+    },
-+    'can select an alternate interface on a setting with non-sequential ' +
-+        'interface number');
-+
-+usb_test(
-+    async () => {
-+      const {device} = await getFakeDevice();
-+      await device.open();
-+      await device.selectConfiguration(3);
-+      await device.claimInterface(0);
-+      await device.selectAlternateInterface(0, 2);
-+      await device.close();
-+    },
-+    'can select an alternate interface on a setting with non-sequential ' +
-+        'alternative setting value');
-+
- usb_test(() => {
-   return getFakeDevice().then(({ device }) => {
-     return device.open()
diff --git a/patches/v8/cherry-pick-f546ac11eec7.patch b/patches/v8/cherry-pick-f546ac11eec7.patch
index f4d24a5258..0c667dba37 100644
--- a/patches/v8/cherry-pick-f546ac11eec7.patch
+++ b/patches/v8/cherry-pick-f546ac11eec7.patch
@@ -41,52 +41,3 @@ index 6a8eb146770118d9d0d8ae5efc5a7162a094e26b..9c000959f55e42f388ba4ae75b98a6a8
  
  DEFINE_BOOL(enable_mega_dom_ic, false, "use MegaDOM IC state for API objects")
  
-diff --git a/test/cctest/interpreter/bytecode_expectations/ClassAndSuperClass.golden b/test/cctest/interpreter/bytecode_expectations/ClassAndSuperClass.golden
-index 82b6e16be98d8dd9d8fe6b8419653d2c02f7bf79..c433538d8ed52c52277f2ad7163fc4b15c29591c 100644
---- a/test/cctest/interpreter/bytecode_expectations/ClassAndSuperClass.golden
-+++ b/test/cctest/interpreter/bytecode_expectations/ClassAndSuperClass.golden
-@@ -20,14 +20,18 @@ snippet: "
-     test();
-   })();
- "
--frame size: 1
-+frame size: 5
- parameter count: 1
--bytecode array length: 16
-+bytecode array length: 24
- bytecodes: [
-   /*  104 S> */ B(LdaImmutableCurrentContextSlot), U8(2),
--  /*  117 E> */ B(LdaNamedPropertyFromSuper), R(this), U8(0), U8(1),
-+                B(Star3),
-+                B(LdaConstant), U8(0),
-+                B(Star4),
-+                B(Mov), R(this), R(2),
-+  /*  117 E> */ B(CallRuntime), U16(Runtime::kLoadFromSuper), R(2), U8(3),
-                 B(Star0),
--  /*  117 E> */ B(CallAnyReceiver), R(0), R(this), U8(1), U8(3),
-+  /*  117 E> */ B(CallAnyReceiver), R(0), R(this), U8(1), U8(1),
-   /*  126 E> */ B(AddSmi), I8(1), U8(0),
-   /*  130 S> */ B(Return),
- ]
-@@ -54,7 +58,7 @@ snippet: "
- "
- frame size: 4
- parameter count: 1
--bytecode array length: 24
-+bytecode array length: 32
- bytecodes: [
-   /*  130 S> */ B(LdaImmutableCurrentContextSlot), U8(2),
-                 B(Star1),
-@@ -65,7 +69,11 @@ bytecodes: [
-                 B(Mov), R(this), R(0),
-   /*  138 E> */ B(CallRuntime), U16(Runtime::kStoreToSuper), R(0), U8(4),
-   /*  143 S> */ B(LdaImmutableCurrentContextSlot), U8(2),
--  /*  156 E> */ B(LdaNamedPropertyFromSuper), R(this), U8(0), U8(0),
-+                B(Star1),
-+                B(LdaConstant), U8(0),
-+                B(Star2),
-+                B(Mov), R(this), R(0),
-+  /*  156 E> */ B(CallRuntime), U16(Runtime::kLoadFromSuper), R(0), U8(3),
-   /*  158 S> */ B(Return),
- ]
- constant pool: [
diff --git a/patches/angle/.patches b/patches/angle/.patches
index 759ccc67b3..497761427a 100644
--- a/patches/angle/.patches
+++ b/patches/angle/.patches
@@ -1,4 +1,2 @@
 cherry-pick-d27d9d059b51.patch
-m100_fix_crash_when_pausing_xfb_then_deleting_a_buffer.patch
-cherry-pick-d49484c21e3c.patch
 cherry-pick-a602a068e022.patch
diff --git a/patches/angle/.patches b/patches/angle/.patches
index 242904e..5dd06ba 100644
--- a/patches/angle/.patches
+++ b/patches/angle/.patches
@@ -1,3 +1,2 @@
 cherry-pick-d27d9d059b51.patch
-cherry-pick-a602a068e022.patch
 cherry-pick-a4f71e40e571.patch
diff --git a/patches/chromium/cherry-pick-b03797bdb1df.patch b/patches/chromium/cherry-pick-b03797bdb1df.patch
index 14985218cd..3cb4a81cc0 100644
--- a/patches/chromium/cherry-pick-b03797bdb1df.patch
+++ b/patches/chromium/cherry-pick-b03797bdb1df.patch
@@ -1,3 +1,4 @@
+diff --git a/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html b/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html
 From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
 From: Xiaocheng Hu <xiaochengh@chromium.org>
 Date: Mon, 2 May 2022 23:43:40 +0000
@@ -131,65 +132,3 @@ index 4ee332fa16a1bda54e6ba99c8063876fb046adaa..463fd9a37671b92c9af68ff5f3c0e8dd
  
    return CreateFragmentFromMarkup(document, markup, base_url,
                                    kDisallowScriptingAndPluginContent);
-diff --git a/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html b/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html
-index c03ca90d492a5e2af883f68811baa7660ef1cdc2..1af77f8faa4501f577e28297f013e170775bc86a 100644
---- a/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html
-+++ b/third_party/blink/web_tests/editing/pasteboard/paste-svg-use.html
-@@ -32,6 +32,6 @@ selection_test(
-       <use href=data:application/xml;base64,PHN2ZyBpZD0neCcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJz4KPGEgaHJlZj0namF2YXNjcmlwdDphbGVydCgxMjMpJz4KICAgIDxyZWN0IHdpZHRoPScxMDAlJyBoZWlnaHQ9JzEwMCUnIGZpbGw9J2xpZ2h0Ymx1ZScgLz4KICAgICA8dGV4dCB4PScwJyB5PScwJyBmaWxsPSdibGFjayc+CiAgICAgICA8dHNwYW4geD0nMCcgZHk9JzEuMmVtJz5Pb3BzLCB0aGVyZSdzIHNvbWV0aGluZyB3cm9uZyB3aXRoIHRoZSBwYWdlITwvdHNwYW4+CiAgICAgPHRzcGFuIHg9JzAnIGR5PScxLjJlbSc+UGxlYXNlIGNsaWNrIGhlcmUgdG8gcmVsb2FkLjwvdHNwYW4+Cjwvc3ZnPg==#x>"></noscript>asdasd`);
-     selection.document.execCommand('paste');
-   },
--  '<div contenteditable>|<noscript>&lt;u title="</noscript><div contenteditable="false"><svg></svg></div></div>',
-+  '<div contenteditable><div><br></div><div>      <u title="</div><div>      </div><div>      ">asdasd|</div></div>',
-   'Paste blocks data URI in SVG use element injection via <noscript>');
- </script>
-diff --git a/third_party/blink/web_tests/external/wpt/clipboard-apis/async-navigator-clipboard-read-sanitize.https.html b/third_party/blink/web_tests/external/wpt/clipboard-apis/async-navigator-clipboard-read-sanitize.https.html
-new file mode 100644
-index 0000000000000000000000000000000000000000..9e0ab2ee740f85ea4e9de9d3f1d2ac43bee5a985
---- /dev/null
-+++ b/third_party/blink/web_tests/external/wpt/clipboard-apis/async-navigator-clipboard-read-sanitize.https.html
-@@ -0,0 +1,44 @@
-+<!doctype html>
-+<meta charset="utf-8">
-+<title>Async Clipboard.read() should sanitize text/html</title>
-+<link rel="help" href="https://w3c.github.io/clipboard-apis/#dom-clipboard-read">
-+<link rel="help" href="https://bugs.chromium.org/p/chromium/issues/detail?id=1315563">
-+<script src="/resources/testharness.js"></script>
-+<script src="/resources/testharnessreport.js"></script>
-+<script src="/resources/testdriver.js"></script>
-+<script src="/resources/testdriver-vendor.js"></script>
-+
-+<p><button id="button">Put payload in the clipboard</button></p>
-+<div id="output"></div>
-+
-+<script>
-+let testFailed = false;
-+function fail() {
-+  testFailed = true;
-+}
-+
-+button.onclick = () => document.execCommand('copy');
-+document.oncopy = ev => {
-+  ev.preventDefault();
-+  ev.clipboardData.setData(
-+      'text/html',
-+      `<form><math><mtext></form><form><mglyph><xmp></math><img src=invalid onerror=fail()></xmp>`);
-+};
-+
-+promise_test(async test => {
-+  await test_driver.set_permission({name: 'clipboard-read'}, 'granted');
-+  await test_driver.click(button);
-+
-+  const items = await navigator.clipboard.read();
-+  const htmlBlob = await items[0].getType("text/html");
-+  const html = await htmlBlob.text();
-+
-+  // This inserts an image with `onerror` handler if `html` is not properly sanitized
-+  output.innerHTML = html;
-+
-+  // Allow the 'error' event to be dispatched asynchronously
-+  await new Promise(resolve => test.step_timeout(resolve, 100));
-+
-+  assert_false(testFailed);
-+});
-+</script>
diff --git a/patches/v8/cherry-pick-44c4e56fea2c.patch b/patches/v8/cherry-pick-44c4e56fea2c.patch
index 8e61e340d8..7126eea4e5 100644
--- a/patches/v8/cherry-pick-44c4e56fea2c.patch
+++ b/patches/v8/cherry-pick-44c4e56fea2c.patch
@@ -115,71 +115,3 @@ index 2ddcedaa5815d6905b587e733c7c276aea234e08..24d474332bec9a83391d44b53aa955f8
    weak_cell.set_unregister_token(undefined);
    weak_cell.set_key_list_prev(undefined);
    weak_cell.set_key_list_next(undefined);
-diff --git a/test/cctest/test-js-weak-refs.cc b/test/cctest/test-js-weak-refs.cc
-index 8974bdf6dba65be319afbfdfc66641d27ed14a07..eb6ca2d73685b437978fac642190c8d653f4c73a 100644
---- a/test/cctest/test-js-weak-refs.cc
-+++ b/test/cctest/test-js-weak-refs.cc
-@@ -853,9 +853,7 @@ TEST(TestRemoveUnregisterToken) {
- 
-   finalization_registry->RemoveUnregisterToken(
-       JSReceiver::cast(*token2), isolate,
--      [undefined](WeakCell matched_cell) {
--        matched_cell.set_unregister_token(*undefined);
--      },
-+      JSFinalizationRegistry::kKeepMatchedCellsInRegistry,
-       [](HeapObject, ObjectSlot, Object) {});
- 
-   // Both weak_cell2a and weak_cell2b remain on the weak cell chains.
-@@ -1024,5 +1022,52 @@ TEST(UnregisterTokenHeapVerifier) {
-   EmptyMessageQueues(isolate);
- }
- 
-+TEST(UnregisteredAndUnclearedCellHeapVerifier) {
-+  if (!FLAG_incremental_marking) return;
-+  ManualGCScope manual_gc_scope;
-+#ifdef VERIFY_HEAP
-+  FLAG_verify_heap = true;
-+#endif
-+
-+  CcTest::InitializeVM();
-+  v8::Isolate* isolate = CcTest::isolate();
-+  Heap* heap = CcTest::heap();
-+  v8::HandleScope outer_scope(isolate);
-+
-+  {
-+    // Make a new FinalizationRegistry and register an object with a token.
-+    v8::HandleScope scope(isolate);
-+    CompileRun(
-+        "var token = {}; "
-+        "var registry = new FinalizationRegistry(function () {}); "
-+        "registry.register({}, undefined, token);");
-+  }
-+
-+  // Start incremental marking to activate the marking barrier.
-+  heap::SimulateIncrementalMarking(heap, false);
-+
-+  {
-+    // Make a WeakCell list with length >1, then unregister with the token to
-+    // the WeakCell from the registry. The linked list manipulation keeps the
-+    // unregistered WeakCell alive (i.e. not put into cleared_cells) due to the
-+    // marking barrier from incremental marking. Then make the original token
-+    // collectible.
-+    v8::HandleScope scope(isolate);
-+    CompileRun(
-+        "registry.register({}); "
-+        "registry.unregister(token); "
-+        "token = 0;");
-+  }
-+
-+  // Trigger GC.
-+  CcTest::CollectAllGarbage();
-+  CcTest::CollectAllGarbage();
-+
-+  // Pump message loop to run the finalizer task, then the incremental marking
-+  // task. The verifier will verify that live WeakCells don't point to dead
-+  // unregister tokens.
-+  EmptyMessageQueues(isolate);
-+}
-+
- }  // namespace internal
- }  // namespace v8
diff --git a/patches/v8/version_10_2_154_10_cherry-pick.patch b/patches/v8/version_10_2_154_10_cherry-pick.patch
index 649e0aedc2..866c700aed 100644
--- a/patches/v8/version_10_2_154_10_cherry-pick.patch
+++ b/patches/v8/version_10_2_154_10_cherry-pick.patch
@@ -16,19 +16,6 @@ Cr-Commit-Position: refs/branch-heads/10.2@{#18}
 Cr-Branched-From: 374091f382e88095694c1283cbdc2acddc1b1417-refs/heads/10.2.154@{#1}
 Cr-Branched-From: f0c353f6315eeb2212ba52478983a3b3af07b5b1-refs/heads/main@{#79976}
 
-diff --git a/include/v8-version.h b/include/v8-version.h
-index b6e920c05e5928c707f8e7c0ed56822a6bb33164..3b18fdda0dfb74163bfdc3aad34e0611250efb6c 100644
---- a/include/v8-version.h
-+++ b/include/v8-version.h
-@@ -11,7 +11,7 @@
- #define V8_MAJOR_VERSION 9
- #define V8_MINOR_VERSION 8
- #define V8_BUILD_NUMBER 177
--#define V8_PATCH_LEVEL 13
-+#define V8_PATCH_LEVEL 14
- 
- // Use 1 for candidates and 0 otherwise.
- // (Boolean macro values are not supported by all preprocessors.)
 diff --git a/src/compiler/pipeline.cc b/src/compiler/pipeline.cc
 index ef16b8f304b3d7e40ae5e5e8b1acc989be9b42a0..c84b0789fa1fa3a9f6df3d955a631a7c1ba6d54c 100644
 --- a/src/compiler/pipeline.cc
