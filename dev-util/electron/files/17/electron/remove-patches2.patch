diff --git a/patches/v8/cherry-pick-36b66b5cc991.patch b/patches/v8/cherry-pick-36b66b5cc991.patch
index 49ddf5c39f..f95386647e 100644
--- a/patches/v8/cherry-pick-36b66b5cc991.patch
+++ b/patches/v8/cherry-pick-36b66b5cc991.patch
@@ -41,102 +41,3 @@ index 1df13df72c29f804168ab1f57117650922378a07..d823bba604936c1c99b4e3aea694afc8
        }
  
        case LookupIterator::ACCESSOR: {
-diff --git a/test/cctest/test-api-interceptors.cc b/test/cctest/test-api-interceptors.cc
-index 909795ece407ac2089f15e562d308733371fbb65..7eb96a54f77519a8b968d40fab4d01070e0ed179 100644
---- a/test/cctest/test-api-interceptors.cc
-+++ b/test/cctest/test-api-interceptors.cc
-@@ -60,6 +60,16 @@ void EmptyInterceptorDeleter(
- void EmptyInterceptorEnumerator(
-     const v8::PropertyCallbackInfo<v8::Array>& info) {}
- 
-+void EmptyInterceptorDefinerWithSideEffect(
-+    Local<Name> name, const v8::PropertyDescriptor& desc,
-+    const v8::PropertyCallbackInfo<v8::Value>& info) {
-+  ApiTestFuzzer::Fuzz();
-+  v8::Local<v8::Value> result = CompileRun("interceptor_definer_side_effect()");
-+  if (!result->IsNull()) {
-+    info.GetReturnValue().Set(result);
-+  }
-+}
-+
- void SimpleAccessorGetter(Local<String> name,
-                           const v8::PropertyCallbackInfo<v8::Value>& info) {
-   Local<Object> self = info.This().As<Object>();
-@@ -869,13 +879,17 @@ THREADED_TEST(InterceptorHasOwnPropertyCausingGC) {
- namespace {
- 
- void CheckInterceptorIC(v8::GenericNamedPropertyGetterCallback getter,
-+                        v8::GenericNamedPropertySetterCallback setter,
-                         v8::GenericNamedPropertyQueryCallback query,
--                        const char* source, int expected) {
-+                        v8::GenericNamedPropertyDefinerCallback definer,
-+                        v8::PropertyHandlerFlags flags, const char* source,
-+                        int expected) {
-   v8::Isolate* isolate = CcTest::isolate();
-   v8::HandleScope scope(isolate);
-   v8::Local<v8::ObjectTemplate> templ = ObjectTemplate::New(isolate);
-   templ->SetHandler(v8::NamedPropertyHandlerConfiguration(
--      getter, nullptr, query, nullptr, nullptr, v8_str("data")));
-+      getter, setter, query, nullptr /* deleter */, nullptr /* enumerator */,
-+      definer, nullptr /* descriptor */, v8_str("data"), flags));
-   LocalContext context;
-   context->Global()
-       ->Set(context.local(), v8_str("o"),
-@@ -885,9 +899,17 @@ void CheckInterceptorIC(v8::GenericNamedPropertyGetterCallback getter,
-   CHECK_EQ(expected, value->Int32Value(context.local()).FromJust());
- }
- 
-+void CheckInterceptorIC(v8::GenericNamedPropertyGetterCallback getter,
-+                        v8::GenericNamedPropertyQueryCallback query,
-+                        const char* source, int expected) {
-+  CheckInterceptorIC(getter, nullptr, query, nullptr,
-+                     v8::PropertyHandlerFlags::kNone, source, expected);
-+}
-+
- void CheckInterceptorLoadIC(v8::GenericNamedPropertyGetterCallback getter,
-                             const char* source, int expected) {
--  CheckInterceptorIC(getter, nullptr, source, expected);
-+  CheckInterceptorIC(getter, nullptr, nullptr, nullptr,
-+                     v8::PropertyHandlerFlags::kNone, source, expected);
- }
- 
- void InterceptorLoadICGetter(Local<Name> name,
-@@ -1581,6 +1603,38 @@ THREADED_TEST(InterceptorStoreICWithSideEffectfulCallbacks) {
-                      19);
- }
- 
-+THREADED_TEST(InterceptorDefineICWithSideEffectfulCallbacks) {
-+  CheckInterceptorIC(EmptyInterceptorGetter, EmptyInterceptorSetter,
-+                     EmptyInterceptorQuery,
-+                     EmptyInterceptorDefinerWithSideEffect,
-+                     v8::PropertyHandlerFlags::kNonMasking,
-+                     "let inside_side_effect = false;"
-+                     "let interceptor_definer_side_effect = function() {"
-+                     "  if (!inside_side_effect) {"
-+                     "    inside_side_effect = true;"
-+                     "    o.y = 153;"
-+                     "    inside_side_effect = false;"
-+                     "  }"
-+                     "  return null;"
-+                     "};"
-+                     "class Base {"
-+                     "  constructor(arg) {"
-+                     "    return arg;"
-+                     "  }"
-+                     "}"
-+                     "class ClassWithField extends Base {"
-+                     "  y = (() => {"
-+                     "    return 42;"
-+                     "  })();"
-+                     "  constructor(arg) {"
-+                     "    super(arg);"
-+                     "  }"
-+                     "}"
-+                     "new ClassWithField(o);"
-+                     "o.y",
-+                     42);
-+}
-+
- static void InterceptorStoreICSetter(
-     Local<Name> key, Local<Value> value,
-     const v8::PropertyCallbackInfo<v8::Value>& info) {
diff --git a/patches/chromium/cherry-pick-a1dc371d6680.patch b/patches/chromium/cherry-pick-a1dc371d6680.patch
index efa6892b4a..6b10d25f35 100644
--- a/patches/chromium/cherry-pick-a1dc371d6680.patch
+++ b/patches/chromium/cherry-pick-a1dc371d6680.patch
@@ -125,289 +125,3 @@ index bba6f5eb58d56e9372f9cef8e38e2f1493a94678..2ecc28054831e076f85832d97bd95a73
    }
    return USBAlternateInterface::Create(this, 0);
  }
-diff --git a/third_party/blink/web_tests/external/wpt/webusb/resources/fake-devices.js b/third_party/blink/web_tests/external/wpt/webusb/resources/fake-devices.js
-index 975d2242c949740217c050beea72db908ef46fc7..c5c5cadaa6af48f676565775d1dc8e27efffc3a2 100644
---- a/third_party/blink/web_tests/external/wpt/webusb/resources/fake-devices.js
-+++ b/third_party/blink/web_tests/external/wpt/webusb/resources/fake-devices.js
-@@ -16,75 +16,160 @@ let fakeDeviceInit = {
-   productName: 'The amazing imaginary printer',
-   serialNumber: '4',
-   activeConfigurationValue: 0,
--  configurations: [{
--    configurationValue: 1,
--    configurationName: 'Printer Mode',
--    interfaces: [{
--      interfaceNumber: 0,
--      alternates: [{
--        alternateSetting: 0,
--        interfaceClass: 0xff,
--        interfaceSubclass: 0x01,
--        interfaceProtocol: 0x01,
--        interfaceName: 'Control',
--        endpoints: [{
--          endpointNumber: 1,
--          direction: 'in',
--          type: 'interrupt',
--          packetSize: 8
--        }]
-+  configurations: [
-+    {
-+      configurationValue: 1,
-+      configurationName: 'Printer Mode',
-+      interfaces: [
-+        {
-+          interfaceNumber: 0,
-+          alternates: [{
-+            alternateSetting: 0,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x01,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Control',
-+            endpoints: [{
-+              endpointNumber: 1,
-+              direction: 'in',
-+              type: 'interrupt',
-+              packetSize: 8
-+            }]
-+          }]
-+        },
-+        {
-+          interfaceNumber: 1,
-+          alternates: [{
-+            alternateSetting: 0,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x02,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Data',
-+            endpoints: [
-+              {
-+                endpointNumber: 2,
-+                direction: 'in',
-+                type: 'bulk',
-+                packetSize: 1024
-+              },
-+              {
-+                endpointNumber: 2,
-+                direction: 'out',
-+                type: 'bulk',
-+                packetSize: 1024
-+              }
-+            ]
-+          }]
-+        }
-+      ]
-+    },
-+    {
-+      configurationValue: 2,
-+      configurationName: 'Fighting Robot Mode',
-+      interfaces: [{
-+        interfaceNumber: 0,
-+        alternates: [
-+          {
-+            alternateSetting: 0,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x42,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Disabled',
-+            endpoints: []
-+          },
-+          {
-+            alternateSetting: 1,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x42,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Activate!',
-+            endpoints: [
-+              {
-+                endpointNumber: 1,
-+                direction: 'in',
-+                type: 'isochronous',
-+                packetSize: 1024
-+              },
-+              {
-+                endpointNumber: 1,
-+                direction: 'out',
-+                type: 'isochronous',
-+                packetSize: 1024
-+              }
-+            ]
-+          }
-+        ]
-       }]
--    }, {
--      interfaceNumber: 1,
--      alternates: [{
--        alternateSetting: 0,
--        interfaceClass: 0xff,
--        interfaceSubclass: 0x02,
--        interfaceProtocol: 0x01,
--        interfaceName: 'Data',
--        endpoints: [{
--          endpointNumber: 2,
--          direction: 'in',
--          type: 'bulk',
--          packetSize: 1024
--        }, {
--          endpointNumber: 2,
--          direction: 'out',
--          type: 'bulk',
--          packetSize: 1024
--        }]
--      }]
--    }]
--  }, {
--    configurationValue: 2,
--    configurationName: 'Fighting Robot Mode',
--    interfaces: [{
--      interfaceNumber: 0,
--      alternates: [{
--        alternateSetting: 0,
--        interfaceClass: 0xff,
--        interfaceSubclass: 0x42,
--        interfaceProtocol: 0x01,
--        interfaceName: 'Disabled',
--        endpoints: []
--      }, {
--        alternateSetting: 1,
--        interfaceClass: 0xff,
--        interfaceSubclass: 0x42,
--        interfaceProtocol: 0x01,
--        interfaceName: 'Activate!',
--        endpoints: [{
--          endpointNumber: 1,
--          direction: 'in',
--          type: 'isochronous',
--          packetSize: 1024
--        }, {
--          endpointNumber: 1,
--          direction: 'out',
--          type: 'isochronous',
--          packetSize: 1024
--        }]
--      }]
--    }]
--  }]
-+    },
-+    {
-+      configurationValue: 3,
-+      configurationName: 'Non-sequential interface number and alternate ' +
-+          'setting Mode',
-+      interfaces: [
-+        {
-+          interfaceNumber: 0,
-+          alternates: [
-+            {
-+              alternateSetting: 0,
-+              interfaceClass: 0xff,
-+              interfaceSubclass: 0x01,
-+              interfaceProtocol: 0x01,
-+              interfaceName: 'Control',
-+              endpoints: [{
-+                endpointNumber: 1,
-+                direction: 'in',
-+                type: 'interrupt',
-+                packetSize: 8
-+              }]
-+            },
-+            {
-+              alternateSetting: 2,
-+              interfaceClass: 0xff,
-+              interfaceSubclass: 0x02,
-+              interfaceProtocol: 0x01,
-+              interfaceName: 'Data',
-+              endpoints: [
-+                {
-+                  endpointNumber: 2,
-+                  direction: 'in',
-+                  type: 'bulk',
-+                  packetSize: 1024
-+                },
-+                {
-+                  endpointNumber: 2,
-+                  direction: 'out',
-+                  type: 'bulk',
-+                  packetSize: 1024
-+                }
-+              ]
-+            }
-+          ]
-+        },
-+        {
-+          interfaceNumber: 2,
-+          alternates: [{
-+            alternateSetting: 0,
-+            interfaceClass: 0xff,
-+            interfaceSubclass: 0x02,
-+            interfaceProtocol: 0x01,
-+            interfaceName: 'Data',
-+            endpoints: [
-+              {
-+                endpointNumber: 2,
-+                direction: 'in',
-+                type: 'bulk',
-+                packetSize: 1024
-+              },
-+              {
-+                endpointNumber: 2,
-+                direction: 'out',
-+                type: 'bulk',
-+                packetSize: 1024
-+              }
-+            ]
-+          }]
-+        }
-+      ]
-+    }
-+  ]
- };
-diff --git a/third_party/blink/web_tests/external/wpt/webusb/usbDevice.https.any.js b/third_party/blink/web_tests/external/wpt/webusb/usbDevice.https.any.js
-index 5bfd841d5248e91a5cabf10d00d78db23d11f0e5..527d238d69b703b1fcf5d8a001d02e9f87b5689a 100644
---- a/third_party/blink/web_tests/external/wpt/webusb/usbDevice.https.any.js
-+++ b/third_party/blink/web_tests/external/wpt/webusb/usbDevice.https.any.js
-@@ -236,10 +236,11 @@ usb_test(() => {
-   return getFakeDevice().then(({ device }) => {
-     assert_equals(device.configuration, null);
-     return device.open()
--      .then(() => assertRejectsWithError(
--            device.selectConfiguration(3), 'NotFoundError',
--            'The configuration value provided is not supported by the device.'))
--      .then(() => device.close());
-+        .then(
-+            () => assertRejectsWithError(
-+                device.selectConfiguration(10), 'NotFoundError',
-+                'The configuration value provided is not supported by the device.'))
-+        .then(() => device.close());
-   });
- }, 'selectConfiguration rejects on invalid configurations');
- 
-@@ -431,6 +432,30 @@ usb_test(() => {
-   });
- }, 'can select an alternate interface');
- 
-+usb_test(
-+    async () => {
-+      const {device} = await getFakeDevice();
-+      await device.open();
-+      await device.selectConfiguration(3);
-+      await device.claimInterface(2);
-+      await device.selectAlternateInterface(2, 0);
-+      await device.close();
-+    },
-+    'can select an alternate interface on a setting with non-sequential ' +
-+        'interface number');
-+
-+usb_test(
-+    async () => {
-+      const {device} = await getFakeDevice();
-+      await device.open();
-+      await device.selectConfiguration(3);
-+      await device.claimInterface(0);
-+      await device.selectAlternateInterface(0, 2);
-+      await device.close();
-+    },
-+    'can select an alternate interface on a setting with non-sequential ' +
-+        'alternative setting value');
-+
- usb_test(() => {
-   return getFakeDevice().then(({ device }) => {
-     return device.open()
diff --git a/patches/v8/cherry-pick-f546ac11eec7.patch b/patches/v8/cherry-pick-f546ac11eec7.patch
index f4d24a5258..0c667dba37 100644
--- a/patches/v8/cherry-pick-f546ac11eec7.patch
+++ b/patches/v8/cherry-pick-f546ac11eec7.patch
@@ -41,52 +41,3 @@ index 6a8eb146770118d9d0d8ae5efc5a7162a094e26b..9c000959f55e42f388ba4ae75b98a6a8
  
  DEFINE_BOOL(enable_mega_dom_ic, false, "use MegaDOM IC state for API objects")
  
-diff --git a/test/cctest/interpreter/bytecode_expectations/ClassAndSuperClass.golden b/test/cctest/interpreter/bytecode_expectations/ClassAndSuperClass.golden
-index 82b6e16be98d8dd9d8fe6b8419653d2c02f7bf79..c433538d8ed52c52277f2ad7163fc4b15c29591c 100644
---- a/test/cctest/interpreter/bytecode_expectations/ClassAndSuperClass.golden
-+++ b/test/cctest/interpreter/bytecode_expectations/ClassAndSuperClass.golden
-@@ -20,14 +20,18 @@ snippet: "
-     test();
-   })();
- "
--frame size: 1
-+frame size: 5
- parameter count: 1
--bytecode array length: 16
-+bytecode array length: 24
- bytecodes: [
-   /*  104 S> */ B(LdaImmutableCurrentContextSlot), U8(2),
--  /*  117 E> */ B(LdaNamedPropertyFromSuper), R(this), U8(0), U8(1),
-+                B(Star3),
-+                B(LdaConstant), U8(0),
-+                B(Star4),
-+                B(Mov), R(this), R(2),
-+  /*  117 E> */ B(CallRuntime), U16(Runtime::kLoadFromSuper), R(2), U8(3),
-                 B(Star0),
--  /*  117 E> */ B(CallAnyReceiver), R(0), R(this), U8(1), U8(3),
-+  /*  117 E> */ B(CallAnyReceiver), R(0), R(this), U8(1), U8(1),
-   /*  126 E> */ B(AddSmi), I8(1), U8(0),
-   /*  130 S> */ B(Return),
- ]
-@@ -54,7 +58,7 @@ snippet: "
- "
- frame size: 4
- parameter count: 1
--bytecode array length: 24
-+bytecode array length: 32
- bytecodes: [
-   /*  130 S> */ B(LdaImmutableCurrentContextSlot), U8(2),
-                 B(Star1),
-@@ -65,7 +69,11 @@ bytecodes: [
-                 B(Mov), R(this), R(0),
-   /*  138 E> */ B(CallRuntime), U16(Runtime::kStoreToSuper), R(0), U8(4),
-   /*  143 S> */ B(LdaImmutableCurrentContextSlot), U8(2),
--  /*  156 E> */ B(LdaNamedPropertyFromSuper), R(this), U8(0), U8(0),
-+                B(Star1),
-+                B(LdaConstant), U8(0),
-+                B(Star2),
-+                B(Mov), R(this), R(0),
-+  /*  156 E> */ B(CallRuntime), U16(Runtime::kLoadFromSuper), R(0), U8(3),
-   /*  158 S> */ B(Return),
- ]
- constant pool: [
diff --git a/patches/angle/.patches b/patches/angle/.patches
index 759ccc67b3..497761427a 100644
--- a/patches/angle/.patches
+++ b/patches/angle/.patches
@@ -1,4 +1,2 @@
 cherry-pick-d27d9d059b51.patch
-m100_fix_crash_when_pausing_xfb_then_deleting_a_buffer.patch
-cherry-pick-d49484c21e3c.patch
 cherry-pick-a602a068e022.patch
