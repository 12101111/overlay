From 38c1fdee600f5fd1c5fd1b15cdbdcf232df7aa87 Mon Sep 17 00:00:00 2001
From: Allan Sandfeld Jensen <allan.jensen@qt.io>
Date: Wed, 10 Mar 2021 17:14:27 +0100
Subject: [PATCH] Fix normalization of locale to languages

Use the internal Chromium routine to get what Chromium expects already
here.

Fixes: QTBUG-91715
Change-Id: I5042eb066cb6879ad69628959912f2841867b4e8
---

diff --git a/src/core/web_engine_library_info.cpp b/src/core/web_engine_library_info.cpp
index 2ad5b75..d33b8da 100644
--- a/src/core/web_engine_library_info.cpp
+++ b/src/core/web_engine_library_info.cpp
@@ -350,18 +350,20 @@
     return toString16(qApp->applicationName());
 }

+namespace l10n_util {
+bool CheckAndResolveLocale(const std::string& locale, std::string* resolved_locale);
+} //  namespace l10n_util
+
 std::string WebEngineLibraryInfo::getApplicationLocale()
 {
     base::CommandLine *parsedCommandLine = base::CommandLine::ForCurrentProcess();
     if (!parsedCommandLine->HasSwitch(switches::kLang)) {
         const QString &locale = QLocale().bcp47Name();
-
-        // QLocale::bcp47Name returns "en" for American English locale. Chromium requires the "US" suffix
-        // to clarify the dialect and ignores the shorter version.
-        if (locale == "en")
-            return "en-US";
-
-        return locale.toStdString();
+        std::string resolved_locale;
+        if (l10n_util::CheckAndResolveLocale(locale.toStdString(), &resolved_locale)) {
+            return resolved_locale;
+        }
+        return "en-US";
     }

     return parsedCommandLine->GetSwitchValueASCII(switches::kLang);

