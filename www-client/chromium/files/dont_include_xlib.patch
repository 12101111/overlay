diff --git a/media/gpu/vaapi/vaapi_picture_native_pixmap_angle.cc b/media/gpu/vaapi/vaapi_picture_native_pixmap_angle.cc
index 843cf22..dc3e525 100644
--- a/media/gpu/vaapi/vaapi_picture_native_pixmap_angle.cc
+++ b/media/gpu/vaapi/vaapi_picture_native_pixmap_angle.cc
@@ -10,6 +10,7 @@
 #include "ui/gl/gl_bindings.h"
 #include "ui/gl/gl_image_egl_pixmap.h"
 #include "ui/gl/scoped_binders.h"
+#include "ui/gfx/x/x11.h"
 
 namespace media {
 
@@ -20,7 +21,7 @@ inline Pixmap CreatePixmap(const gfx::Size& size) {
   if (!display)
     return 0;
 
-  int screen = DefaultScreen(display);
+  int screen = XDefaultScreen(display);
   auto root = XRootWindow(display, screen);
   if (root == BadValue)
     return 0;
diff --git a/media/gpu/vaapi/vaapi_picture_tfp.cc b/media/gpu/vaapi/vaapi_picture_tfp.cc
index 9ff0372..556b262 100644
--- a/media/gpu/vaapi/vaapi_picture_tfp.cc
+++ b/media/gpu/vaapi/vaapi_picture_tfp.cc
@@ -7,6 +7,7 @@
 #include "media/gpu/vaapi/va_surface.h"
 #include "media/gpu/vaapi/vaapi_wrapper.h"
 #include "ui/base/ui_base_features.h"
+#include "ui/gfx/x/x11.h"
 #include "ui/gfx/x/x11_types.h"
 #include "ui/gl/gl_bindings.h"
 #include "ui/gl/gl_image_glx.h"
@@ -85,7 +86,7 @@ Status VaapiTFPPicture::Allocate(gfx::BufferFormat format) {
   }
 
   XWindowAttributes win_attr;
-  int screen = DefaultScreen(x_display_);
+  int screen = XDefaultScreen(x_display_);
   XGetWindowAttributes(x_display_, XRootWindow(x_display_, screen), &win_attr);
   // TODO(posciak): pass the depth required by libva, not the RootWindow's
   // depth
diff --git a/media/gpu/vaapi/vaapi_wrapper.cc b/media/gpu/vaapi/vaapi_wrapper.cc
index ece0f5f..1e9964e 100644
--- a/media/gpu/vaapi/vaapi_wrapper.cc
+++ b/media/gpu/vaapi/vaapi_wrapper.cc
@@ -58,6 +58,7 @@
 #include "ui/gl/gl_implementation.h"
 
 #if defined(USE_X11)
+#define _X11_XLIB_H_
 #include <va/va_x11.h>
 #include "ui/gfx/x/x11_types.h"  // nogncheck
 #endif
diff --git a/ui/gfx/x/x11.h b/ui/gfx/x/x11.h
index 25668fd..d4c51cf 100644
--- a/ui/gfx/x/x11.h
+++ b/ui/gfx/x/x11.h
@@ -119,6 +119,8 @@ static constexpr auto AnyPropertyType = 0L;
 
 static constexpr auto NoSymbol = 0L;
 
+static constexpr auto BadValue = 2;
+
 using Status = int;
 using Bool = int;
 using XID = unsigned long;
@@ -136,6 +138,7 @@ using Time = unsigned long;
 using GC = struct _XGC*;
 using Display = struct _XDisplay;
 using xcb_connection_t = struct xcb_connection_t;
+using Drawable = XID;
 
 enum XEventQueueOwner { XlibOwnsEventQueue = 0, XCBOwnsEventQueue };
 
@@ -344,6 +347,9 @@ int XChangeKeyboardMapping(Display*, int, int, KeySym*, int);
 Bool XkbLookupKeySym(Display*, KeyCode, unsigned int, unsigned int*, KeySym*);
 Bool XkbLockModifiers(Display*, unsigned int, unsigned int, unsigned int);
 unsigned int XkbKeysymToModifiers(Display*, KeySym);
+Pixmap XCreatePixmap(Display*, Drawable, unsigned int, unsigned int, unsigned int);
+int XFreePixmap(Display*, Pixmap);
+Window XRootWindow(Display*, int);
 }
 
 inline int XkbGroupForCoreState(int s) {
