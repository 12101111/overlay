diff --git a/content/browser/media/media_interface_proxy.cc b/content/browser/media/media_interface_proxy.cc
index c10595e7b3..f9e42ce1b0 100644
--- a/content/browser/media/media_interface_proxy.cc
+++ b/content/browser/media/media_interface_proxy.cc
@@ -415,7 +415,7 @@ void MediaInterfaceProxy::CreateCdm(const media::CdmConfig& cdm_config,
       "CDM creation failed");
 
   // Handle `use_hw_secure_codecs` cases first.
-#if BUILDFLAG(USE_CHROMEOS_PROTECTED_MEDIA)
+#if 0
 #if BUILDFLAG(IS_CHROMEOS_LACROS)
   const bool enable_cdm_factory_daemon =
       base::CommandLine::ForCurrentProcess()->HasSwitch(
diff --git a/media/base/supported_types.cc b/media/base/supported_types.cc
index 41a4609a2a..da470d17ec 100644
--- a/media/base/supported_types.cc
+++ b/media/base/supported_types.cc
@@ -212,13 +212,6 @@ bool IsHevcProfileSupported(const VideoType& type) {
   return true;
 #endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_LINUX)
 #elif BUILDFLAG(ENABLE_PLATFORM_ENCRYPTED_HEVC)
-  // Only encrypted HEVC content is supported, and normally MSE.isTypeSupported
-  // returns false for HEVC. The kEnableClearHevcForTesting flag allows it to
-  // return true to enable a wider array of test scenarios to function properly.
-  if (!base::CommandLine::ForCurrentProcess()->HasSwitch(
-          switches::kEnableClearHevcForTesting)) {
-    return false;
-  }
   return type.profile == HEVCPROFILE_MAIN || type.profile == HEVCPROFILE_MAIN10;
 #else
   return false;
diff --git a/media/filters/source_buffer_state.cc b/media/filters/source_buffer_state.cc
index 74814c3be0..a7941daade 100644
--- a/media/filters/source_buffer_state.cc
+++ b/media/filters/source_buffer_state.cc
@@ -719,7 +719,7 @@ bool SourceBufferState::OnNewConfigs(
       DCHECK(video_config.IsValidConfig());
 
       if (video_config.codec() == VideoCodec::kHEVC) {
-#if BUILDFLAG(ENABLE_PLATFORM_ENCRYPTED_HEVC)
+#if 0 && BUILDFLAG(ENABLE_PLATFORM_ENCRYPTED_HEVC)
 #if BUILDFLAG(IS_CHROMEOS_LACROS)
         if (!base::CommandLine::ForCurrentProcess()->HasSwitch(
                 switches::kLacrosEnablePlatformEncryptedHevc)) {
@@ -742,7 +742,7 @@ bool SourceBufferState::OnNewConfigs(
                  "track is not encrypted.";
           return false;
         }
-#elif !BUILDFLAG(ENABLE_PLATFORM_HEVC)
+#elif 0 && !BUILDFLAG(ENABLE_PLATFORM_HEVC)
         NOTREACHED()
             << "MSE parser must not emit HEVC tracks on build configurations "
                "that do not support HEVC playback via platform.";
diff --git a/media/gpu/vaapi/vaapi_video_decoder.cc b/media/gpu/vaapi/vaapi_video_decoder.cc
index 47c682edbc..aa5160c790 100644
--- a/media/gpu/vaapi/vaapi_video_decoder.cc
+++ b/media/gpu/vaapi/vaapi_video_decoder.cc
@@ -273,7 +273,7 @@ void VaapiVideoDecoder::Initialize(const VideoDecoderConfig& config,
     transcryption_ = (VaapiWrapper::GetImplementationType() ==
                       VAImplementation::kMesaGallium);
 #endif
-#if BUILDFLAG(ENABLE_PLATFORM_HEVC_DECODING)
+#if 0 && BUILDFLAG(ENABLE_PLATFORM_HEVC_DECODING)
   } else if (config.codec() == VideoCodec::kHEVC &&
              !base::CommandLine::ForCurrentProcess()->HasSwitch(
                  switches::kEnableClearHevcForTesting)) {
diff --git a/third_party/blink/renderer/modules/mediasource/media_source.cc b/third_party/blink/renderer/modules/mediasource/media_source.cc
index af8f48c828..5637e96cdb 100644
--- a/third_party/blink/renderer/modules/mediasource/media_source.cc
+++ b/third_party/blink/renderer/modules/mediasource/media_source.cc
@@ -582,7 +582,7 @@ bool MediaSource::IsTypeSupportedInternal(ExecutionContext* context,
   // HTMLMediaElement knows it cannot play.
   String codecs = content_type.Parameter("codecs");
   MIMETypeRegistry::SupportsType get_supports_type_result;
-#if BUILDFLAG(ENABLE_PLATFORM_ENCRYPTED_HEVC)
+#if 0 && BUILDFLAG(ENABLE_PLATFORM_ENCRYPTED_HEVC)
   // Here, we special-case when encrypted HEVC is supported.
   // isTypeSupported(fully qualified type with hevc codec) should say false on
   // such platform (except if kEnableClearHevcForTesting cmdline switch is used,
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/config.h b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/config.h
index a0d4d9ba01..b827b2c3a6 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/config.h
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/config.h
@@ -675,7 +675,7 @@
 #define CONFIG_H264PARSE 1
 #define CONFIG_H264PRED 1
 #define CONFIG_H264QPEL 1
-#define CONFIG_HEVCPARSE 0
+#define CONFIG_HEVCPARSE 1
 #define CONFIG_HPELDSP 1
 #define CONFIG_HUFFMAN 0
 #define CONFIG_HUFFYUVDSP 0
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/config_components.h b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/config_components.h
index 72a5fa30df..b71709215c 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/config_components.h
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/config_components.h
@@ -131,7 +131,7 @@
 #define CONFIG_H264_QSV_DECODER 0
 #define CONFIG_H264_RKMPP_DECODER 0
 #define CONFIG_HAP_DECODER 0
-#define CONFIG_HEVC_DECODER 0
+#define CONFIG_HEVC_DECODER 1
 #define CONFIG_HEVC_QSV_DECODER 0
 #define CONFIG_HEVC_RKMPP_DECODER 0
 #define CONFIG_HEVC_V4L2M2M_DECODER 0
@@ -920,7 +920,7 @@
 #define CONFIG_H261_PARSER 0
 #define CONFIG_H263_PARSER 0
 #define CONFIG_H264_PARSER 1
-#define CONFIG_HEVC_PARSER 0
+#define CONFIG_HEVC_PARSER 1
 #define CONFIG_IPU_PARSER 0
 #define CONFIG_JPEG2000_PARSER 0
 #define CONFIG_MJPEG_PARSER 0
@@ -1611,7 +1611,7 @@
 #define CONFIG_H264_DEMUXER 0
 #define CONFIG_HCA_DEMUXER 0
 #define CONFIG_HCOM_DEMUXER 0
-#define CONFIG_HEVC_DEMUXER 0
+#define CONFIG_HEVC_DEMUXER 1
 #define CONFIG_HLS_DEMUXER 0
 #define CONFIG_HNM_DEMUXER 0
 #define CONFIG_ICO_DEMUXER 0
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavcodec/codec_list.c b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavcodec/codec_list.c
index cbd7f3945a..67d16a7dbe 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavcodec/codec_list.c
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavcodec/codec_list.c
@@ -1,5 +1,6 @@
 static const FFCodec * const codec_list[] = {
     &ff_h264_decoder,
+    &ff_hevc_decoder,
     &ff_theora_decoder,
     &ff_vp3_decoder,
     &ff_vp8_decoder,
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavcodec/parser_list.c b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavcodec/parser_list.c
index 50acddb28e..192a64d7ab 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavcodec/parser_list.c
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavcodec/parser_list.c
@@ -2,6 +2,7 @@ static const AVCodecParser * const parser_list[] = {
     &ff_aac_parser,
     &ff_flac_parser,
     &ff_h264_parser,
+    &ff_hevc_parser,
     &ff_mpegaudio_parser,
     &ff_opus_parser,
     &ff_vorbis_parser,
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavformat/demuxer_list.c b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavformat/demuxer_list.c
index 920b22bfa7..f5c1c39196 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavformat/demuxer_list.c
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/arm64/libavformat/demuxer_list.c
@@ -6,4 +6,5 @@ static const AVInputFormat * const demuxer_list[] = {
     &ff_mp3_demuxer,
     &ff_ogg_demuxer,
     &ff_wav_demuxer,
+    &ff_hevc_demuxer,
     NULL };
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config.asm b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config.asm
index 2c7d068cc5..18b1a5ea5f 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config.asm
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config.asm
@@ -659,7 +659,7 @@
 %define CONFIG_H264PARSE 1
 %define CONFIG_H264PRED 1
 %define CONFIG_H264QPEL 1
-%define CONFIG_HEVCPARSE 0
+%define CONFIG_HEVCPARSE 1
 %define CONFIG_HPELDSP 1
 %define CONFIG_HUFFMAN 0
 %define CONFIG_HUFFYUVDSP 0
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config.h b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config.h
index 963edb1046..718f8c711d 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config.h
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config.h
@@ -675,7 +675,7 @@
 #define CONFIG_H264PARSE 1
 #define CONFIG_H264PRED 1
 #define CONFIG_H264QPEL 1
-#define CONFIG_HEVCPARSE 0
+#define CONFIG_HEVCPARSE 1
 #define CONFIG_HPELDSP 1
 #define CONFIG_HUFFMAN 0
 #define CONFIG_HUFFYUVDSP 0
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config_components.h b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config_components.h
index 72a5fa30df..c0613ca992 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config_components.h
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/config_components.h
@@ -131,7 +131,7 @@
 #define CONFIG_H264_QSV_DECODER 0
 #define CONFIG_H264_RKMPP_DECODER 0
 #define CONFIG_HAP_DECODER 0
-#define CONFIG_HEVC_DECODER 0
+#define CONFIG_HEVC_DECODER 1
 #define CONFIG_HEVC_QSV_DECODER 0
 #define CONFIG_HEVC_RKMPP_DECODER 0
 #define CONFIG_HEVC_V4L2M2M_DECODER 0
@@ -920,7 +920,7 @@
 #define CONFIG_H261_PARSER 0
 #define CONFIG_H263_PARSER 0
 #define CONFIG_H264_PARSER 1
-#define CONFIG_HEVC_PARSER 0
+#define CONFIG_HEVC_PARSER 1
 #define CONFIG_IPU_PARSER 0
 #define CONFIG_JPEG2000_PARSER 0
 #define CONFIG_MJPEG_PARSER 0
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavcodec/codec_list.c b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavcodec/codec_list.c
index cbd7f3945a..67d16a7dbe 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavcodec/codec_list.c
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavcodec/codec_list.c
@@ -1,5 +1,6 @@
 static const FFCodec * const codec_list[] = {
     &ff_h264_decoder,
+    &ff_hevc_decoder,
     &ff_theora_decoder,
     &ff_vp3_decoder,
     &ff_vp8_decoder,
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavcodec/parser_list.c b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavcodec/parser_list.c
index 50acddb28e..192a64d7ab 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavcodec/parser_list.c
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavcodec/parser_list.c
@@ -2,6 +2,7 @@ static const AVCodecParser * const parser_list[] = {
     &ff_aac_parser,
     &ff_flac_parser,
     &ff_h264_parser,
+    &ff_hevc_parser,
     &ff_mpegaudio_parser,
     &ff_opus_parser,
     &ff_vorbis_parser,
diff --git a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavformat/demuxer_list.c b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavformat/demuxer_list.c
index 920b22bfa7..f5c1c39196 100644
--- a/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavformat/demuxer_list.c
+++ b/third_party/ffmpeg/chromium/config/Chrome/linux/x64/libavformat/demuxer_list.c
@@ -6,4 +6,5 @@ static const AVInputFormat * const demuxer_list[] = {
     &ff_mp3_demuxer,
     &ff_ogg_demuxer,
     &ff_wav_demuxer,
+    &ff_hevc_demuxer,
     NULL };
diff --git a/third_party/ffmpeg/libavcodec/hevcdec.c b/third_party/ffmpeg/libavcodec/autorename_libavcodec_hevcdec.c
similarity index 100%
rename from third_party/ffmpeg/libavcodec/hevcdec.c
rename to third_party/ffmpeg/libavcodec/autorename_libavcodec_hevcdec.c
diff --git a/third_party/ffmpeg/libavformat/hevc.c b/third_party/ffmpeg/libavformat/autorename_libavformat_hevc.c
similarity index 100%
rename from third_party/ffmpeg/libavformat/hevc.c
rename to third_party/ffmpeg/libavformat/autorename_libavformat_hevc.c
diff --git a/third_party/ffmpeg/ffmpeg_generated.gni b/third_party/ffmpeg/ffmpeg_generated.gni
index 6798e91e08..36ab3dfe3f 100644
--- a/third_party/ffmpeg/ffmpeg_generated.gni
+++ b/third_party/ffmpeg/ffmpeg_generated.gni
@@ -501,7 +501,41 @@ if ((is_mac) || (is_win) || (use_linux_config)) {
     "libavcodec/vp8.c",
     "libavcodec/vp8_parser.c",
     "libavcodec/vp8dsp.c",
+    "libavcodec/dynamic_hdr10_plus.c",
+    "libavcodec/dynamic_hdr_vivid.c",
+    "libavcodec/dovi_rpu.c",
+    "libavcodec/bswapdsp.c",
+    "libavcodec/autorename_libavcodec_hevcdec.c",
+    "libavcodec/hevc_cabac.c",
+    "libavcodec/hevc_data.c",
+    "libavcodec/hevc_filter.c",
+    "libavcodec/hevc_mvs.c",
+    "libavcodec/hevc_parse.c",
+    "libavcodec/hevc_parser.c",
+    "libavcodec/hevc_ps.c",
+    "libavcodec/hevc_refs.c",
+    "libavcodec/hevc_sei.c",
+    "libavcodec/hevcdsp.c",
+    "libavcodec/hevcpred.c",
+    "libavformat/autorename_libavformat_hevc.c",
+    "libavformat/hevcdec.c",
   ]
+
+  if (current_cpu == "x64") {
+    ffmpeg_c_sources += [
+      "libavcodec/x86/bswapdsp_init.c",
+      "libavcodec/x86/hevcdsp_init.c",
+    ]
+    ffmpeg_asm_sources += [
+      "libavcodec/x86/bswapdsp.asm",
+      "libavcodec/x86/hevc_deblock.asm",
+      "libavcodec/x86/hevc_idct.asm",
+      "libavcodec/x86/hevc_mc.asm",
+      "libavcodec/x86/hevc_add_res.asm",
+      "libavcodec/x86/hevc_sao.asm",
+      "libavcodec/x86/hevc_sao_10bit.asm",
+    ]
+  }
 }
 
 if ((is_mac && current_cpu == "arm64") || (is_win && current_cpu == "arm64") || (use_linux_config && current_cpu == "arm64")) {
@@ -510,12 +544,15 @@
     "libavcodec/aarch64/hpeldsp_init_aarch64.c",
     "libavcodec/aarch64/videodsp_init.c",
     "libavcodec/aarch64/vp8dsp_init_aarch64.c",
+    "libavcodec/aarch64/hevcdsp_init_aarch64.c",
   ]
   ffmpeg_gas_sources += [
     "libavcodec/aarch64/autorename_libavcodec_aarch64_h264pred_neon.S",
     "libavcodec/aarch64/autorename_libavcodec_aarch64_hpeldsp_neon.S",
     "libavcodec/aarch64/autorename_libavcodec_aarch64_vp8dsp_neon.S",
     "libavcodec/aarch64/videodsp.S",
+    "libavcodec/aarch64/hevcdsp_idct_neon.S",
+    "libavcodec/aarch64/hevcdsp_sao_neon.S",
   ]
 }
 
