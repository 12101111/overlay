From 1207bd26f0d221314b5abca761f80b2c569d3249 Mon Sep 17 00:00:00 2001
From: David Parks <daparks@mozilla.com>
Date: Mon, 5 Apr 2021 23:48:40 +0000
Subject: [PATCH] Bug 1682030 - Remove NPAPI windowed plugin layer support 
 r=bas

Removes stale windowed NPAPI plugin layers support as part of removing all NPAPI support.

Differential Revision: https://phabricator.services.mozilla.com/D107153
---
 gfx/layers/client/ClientLayerManager.cpp  |  7 -------
 gfx/layers/client/ClientLayerManager.h    |  9 ---------
 gfx/layers/ipc/CompositorBridgeParent.cpp |  2 +-
 gfx/layers/ipc/LayerTransactionParent.h   |  1 -
 gfx/layers/ipc/LayersMessages.ipdlh       |  9 ---------
 gfx/layers/ipc/ShadowLayers.cpp           | 14 --------------
 gfx/layers/ipc/ShadowLayers.h             |  9 ---------
 7 files changed, 1 insertion(+), 50 deletions(-)

diff --git a/gfx/layers/client/ClientLayerManager.cpp b/gfx/layers/client/ClientLayerManager.cpp
index f837760d8c2cc..ad7b5ab078f50 100644
--- a/gfx/layers/client/ClientLayerManager.cpp
+++ b/gfx/layers/client/ClientLayerManager.cpp
@@ -387,13 +387,6 @@ bool ClientLayerManager::EndTransactionInternal(
   return !mTransactionIncomplete;
 }
 
-void ClientLayerManager::StorePluginWidgetConfigurations(
-    const nsTArray<nsIWidget::Configuration>& aConfigurations) {
-  if (mForwarder) {
-    mForwarder->StorePluginWidgetConfigurations(aConfigurations);
-  }
-}
-
 void ClientLayerManager::EndTransaction(DrawPaintedLayerCallback aCallback,
                                         void* aCallbackData,
                                         EndTransactionFlags aFlags) {
diff --git a/gfx/layers/client/ClientLayerManager.h b/gfx/layers/client/ClientLayerManager.h
index 587f9ec3f2dc2..ca34f62e824e8 100644
--- a/gfx/layers/client/ClientLayerManager.h
+++ b/gfx/layers/client/ClientLayerManager.h
@@ -145,15 +145,6 @@ class ClientLayerManager final : public LayerManager,
 
   void SetFocusTarget(const FocusTarget& aFocusTarget) override;
 
-  /**
-   * Pass through call to the forwarder for nsPresContext's
-   * CollectPluginGeometryUpdates. Passes widget configuration information
-   * to the compositor for transmission to the chrome process. This
-   * configuration gets set when the window paints.
-   */
-  void StorePluginWidgetConfigurations(
-      const nsTArray<nsIWidget::Configuration>& aConfigurations) override;
-
   // Drop cached resources and ask our shadow manager to do the same,
   // if we have one.
   void ClearCachedResources(Layer* aSubtree = nullptr) override;
diff --git a/gfx/layers/ipc/CompositorBridgeParent.cpp b/gfx/layers/ipc/CompositorBridgeParent.cpp
index cfb8237b1762e..8f0c4ed55bf65 100644
--- a/gfx/layers/ipc/CompositorBridgeParent.cpp
+++ b/gfx/layers/ipc/CompositorBridgeParent.cpp
@@ -814,7 +814,7 @@ void CompositorBridgeParent::NotifyShadowTreeTransaction(
     bool aScheduleComposite, uint32_t aPaintSequenceNumber,
     bool aIsRepeatTransaction, bool aHitTestUpdate) {
   if (!aIsRepeatTransaction && mLayerManager && mLayerManager->GetRoot()) {
-    AutoResolveRefLayers resolve(mCompositionManager, this, nullptr);
+    AutoResolveRefLayers resolve(mCompositionManager, this);
 
     if (mApzUpdater) {
       mApzUpdater->UpdateFocusState(mRootLayerTreeID, aId, aFocusTarget);
diff --git a/gfx/layers/ipc/LayerTransactionParent.h b/gfx/layers/ipc/LayerTransactionParent.h
index 73850a5e6b6e0..4a54f88585176 100644
--- a/gfx/layers/ipc/LayerTransactionParent.h
+++ b/gfx/layers/ipc/LayerTransactionParent.h
@@ -36,7 +36,6 @@ class LayerTransactionParent final : public PLayerTransactionParent,
                                      public mozilla::ipc::IShmemAllocator {
   typedef nsTArray<Edit> EditArray;
   typedef nsTArray<OpDestroy> OpDestroyArray;
-  typedef nsTArray<PluginWindowData> PluginsArray;
 
   friend class PLayerTransactionParent;
 
diff --git a/gfx/layers/ipc/LayersMessages.ipdlh b/gfx/layers/ipc/LayersMessages.ipdlh
index afce7fcc346f7..e4f86b7f01f61 100644
--- a/gfx/layers/ipc/LayersMessages.ipdlh
+++ b/gfx/layers/ipc/LayersMessages.ipdlh
@@ -309,14 +309,6 @@ struct LayerAttributes {
   SpecificLayerAttributes specific;
 };
 
-// See nsIWidget Configurations
-[Comparable] struct PluginWindowData {
-  uintptr_t windowId;
-  LayoutDeviceIntRect[] clip;
-  LayoutDeviceIntRect bounds;
-  bool visible;
-};
-
 struct OpSetSimpleLayerAttributes {
   LayerHandle layer;
   SimpleLayerAttributes attrs;
@@ -543,7 +535,6 @@ struct TransactionInfo
   uint64_t fwdTransactionId;
   TransactionId id;
   TargetConfig targetConfig;
-  PluginWindowData[] plugins;
   bool isFirstPaint;
   FocusTarget focusTarget;
   bool scheduleComposite;
diff --git a/gfx/layers/ipc/ShadowLayers.cpp b/gfx/layers/ipc/ShadowLayers.cpp
index e50213d1f1085..9c36e64625103 100644
--- a/gfx/layers/ipc/ShadowLayers.cpp
+++ b/gfx/layers/ipc/ShadowLayers.cpp
@@ -531,19 +531,6 @@ bool ShadowLayerForwarder::InWorkerThread() {
   return GetTextureForwarder()->GetThread()->IsOnCurrentThread();
 }
 
-void ShadowLayerForwarder::StorePluginWidgetConfigurations(
-    const nsTArray<nsIWidget::Configuration>& aConfigurations) {
-  // Cache new plugin widget configs here until we call update, at which
-  // point this data will get shipped over to chrome.
-  mPluginWindowData.Clear();
-  for (uint32_t idx = 0; idx < aConfigurations.Length(); idx++) {
-    const nsIWidget::Configuration& configuration = aConfigurations[idx];
-    mPluginWindowData.AppendElement(
-        PluginWindowData(configuration.mWindowID, configuration.mClipRegion,
-                         configuration.mBounds, configuration.mVisible));
-  }
-}
-
 void ShadowLayerForwarder::SendPaintTime(TransactionId aId,
                                          TimeDuration aPaintTime) {
   if (!IPCOpen() || !mShadowManager->SendPaintTime(aId, aPaintTime)) {
@@ -684,7 +671,6 @@ bool ShadowLayerForwarder::EndTransaction(
   info.toDestroy() = mTxn->mDestroyedActors.Clone();
   info.fwdTransactionId() = GetFwdTransactionId();
   info.id() = aId;
-  info.plugins() = mPluginWindowData.Clone();
   info.isFirstPaint() = mIsFirstPaint;
   info.focusTarget() = mFocusTarget;
   info.scheduleComposite() = aScheduleComposite;
diff --git a/gfx/layers/ipc/ShadowLayers.h b/gfx/layers/ipc/ShadowLayers.h
index 14c9b564bfdc5..d3b29d7c1ec08 100644
--- a/gfx/layers/ipc/ShadowLayers.h
+++ b/gfx/layers/ipc/ShadowLayers.h
@@ -265,14 +265,6 @@ class ShadowLayerForwarder final : public LayersIPCActor,
    */
   void SetShadowManager(PLayerTransactionChild* aShadowManager);
 
-  /**
-   * Layout calls here to cache current plugin widget configuration
-   * data. We ship this across with the rest of the layer updates when
-   * we update. Chrome handles applying these changes.
-   */
-  void StorePluginWidgetConfigurations(
-      const nsTArray<nsIWidget::Configuration>& aConfigurations);
-
   void StopReceiveAsyncParentMessge();
 
   void ClearCachedResources();
@@ -421,7 +413,6 @@ class ShadowLayerForwarder final : public LayersIPCActor,
   DiagnosticTypes mDiagnosticTypes;
   bool mIsFirstPaint;
   FocusTarget mFocusTarget;
-  nsTArray<PluginWindowData> mPluginWindowData;
   UniquePtr<ActiveResourceTracker> mActiveResourceTracker;
   uint64_t mNextLayerHandle;
   nsTHashMap<nsUint64HashKey, CompositableClient*> mCompositables;
